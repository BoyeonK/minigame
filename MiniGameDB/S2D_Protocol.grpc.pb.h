// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: S2D_Protocol.proto
#ifndef GRPC_S2D_5fProtocol_2eproto__INCLUDED
#define GRPC_S2D_5fProtocol_2eproto__INCLUDED

#include "S2D_Protocol.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace S2D_Protocol {

class S2D_Service final {
 public:
  static constexpr char const* service_full_name() {
    return "S2D_Protocol.S2D_Service";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::S2D_Protocol::HelloReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>> AsyncSayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    virtual ::grpc::Status LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::S2D_Protocol::D2S_Login* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>> AsyncLoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>>(AsyncLoginRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>> PrepareAsyncLoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>>(PrepareAsyncLoginRequestRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::S2D_Protocol::D2S_CreateAccount* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>> AsyncCreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>>(AsyncCreateAccountRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>> PrepareAsyncCreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>>(PrepareAsyncCreateAccountRequestRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::HelloReply>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>* AsyncLoginRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_Login>* PrepareAsyncLoginRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>* AsyncCreateAccountRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::S2D_Protocol::D2S_CreateAccount>* PrepareAsyncCreateAccountRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::S2D_Protocol::HelloReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>> AsyncSayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>>(AsyncSayHelloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>> PrepareAsyncSayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>>(PrepareAsyncSayHelloRaw(context, request, cq));
    }
    ::grpc::Status LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::S2D_Protocol::D2S_Login* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>> AsyncLoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>>(AsyncLoginRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>> PrepareAsyncLoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>>(PrepareAsyncLoginRequestRaw(context, request, cq));
    }
    ::grpc::Status CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::S2D_Protocol::D2S_CreateAccount* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>> AsyncCreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>>(AsyncCreateAccountRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>> PrepareAsyncCreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>>(PrepareAsyncCreateAccountRequestRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response, std::function<void(::grpc::Status)>) override;
      void SayHello(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response, std::function<void(::grpc::Status)>) override;
      void LoginRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response, std::function<void(::grpc::Status)>) override;
      void CreateAccountRequest(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>* AsyncSayHelloRaw(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::HelloReply>* PrepareAsyncSayHelloRaw(::grpc::ClientContext* context, const ::S2D_Protocol::HelloRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>* AsyncLoginRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_Login>* PrepareAsyncLoginRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_Login& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>* AsyncCreateAccountRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::S2D_Protocol::D2S_CreateAccount>* PrepareAsyncCreateAccountRequestRaw(::grpc::ClientContext* context, const ::S2D_Protocol::S2D_CreateAccount& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SayHello_;
    const ::grpc::internal::RpcMethod rpcmethod_LoginRequest_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAccountRequest_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SayHello(::grpc::ServerContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response);
    virtual ::grpc::Status LoginRequest(::grpc::ServerContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response);
    virtual ::grpc::Status CreateAccountRequest(::grpc::ServerContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SayHello() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::S2D_Protocol::HelloRequest* request, ::grpc::ServerAsyncResponseWriter< ::S2D_Protocol::HelloReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoginRequest() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginRequest(::grpc::ServerContext* context, ::S2D_Protocol::S2D_Login* request, ::grpc::ServerAsyncResponseWriter< ::S2D_Protocol::D2S_Login>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAccountRequest(::grpc::ServerContext* context, ::S2D_Protocol::S2D_CreateAccount* request, ::grpc::ServerAsyncResponseWriter< ::S2D_Protocol::D2S_CreateAccount>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SayHello<WithAsyncMethod_LoginRequest<WithAsyncMethod_CreateAccountRequest<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::HelloRequest, ::S2D_Protocol::HelloReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::S2D_Protocol::HelloRequest* request, ::S2D_Protocol::HelloReply* response) { return this->SayHello(context, request, response); }));}
    void SetMessageAllocatorFor_SayHello(
        ::grpc::MessageAllocator< ::S2D_Protocol::HelloRequest, ::S2D_Protocol::HelloReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::HelloRequest, ::S2D_Protocol::HelloReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LoginRequest() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::S2D_Login, ::S2D_Protocol::D2S_Login>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::S2D_Protocol::S2D_Login* request, ::S2D_Protocol::D2S_Login* response) { return this->LoginRequest(context, request, response); }));}
    void SetMessageAllocatorFor_LoginRequest(
        ::grpc::MessageAllocator< ::S2D_Protocol::S2D_Login, ::S2D_Protocol::D2S_Login>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::S2D_Login, ::S2D_Protocol::D2S_Login>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::S2D_CreateAccount, ::S2D_Protocol::D2S_CreateAccount>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::S2D_Protocol::S2D_CreateAccount* request, ::S2D_Protocol::D2S_CreateAccount* response) { return this->CreateAccountRequest(context, request, response); }));}
    void SetMessageAllocatorFor_CreateAccountRequest(
        ::grpc::MessageAllocator< ::S2D_Protocol::S2D_CreateAccount, ::S2D_Protocol::D2S_CreateAccount>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::S2D_Protocol::S2D_CreateAccount, ::S2D_Protocol::D2S_CreateAccount>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAccountRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SayHello<WithCallbackMethod_LoginRequest<WithCallbackMethod_CreateAccountRequest<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SayHello() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoginRequest() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SayHello() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSayHello(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoginRequest() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAccountRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SayHello() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SayHello(context, request, response); }));
    }
    ~WithRawCallbackMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SayHello(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LoginRequest() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LoginRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateAccountRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateAccountRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SayHello : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SayHello() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::S2D_Protocol::HelloRequest, ::S2D_Protocol::HelloReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::S2D_Protocol::HelloRequest, ::S2D_Protocol::HelloReply>* streamer) {
                       return this->StreamedSayHello(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SayHello() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SayHello(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::HelloRequest* /*request*/, ::S2D_Protocol::HelloReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSayHello(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::S2D_Protocol::HelloRequest,::S2D_Protocol::HelloReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoginRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoginRequest() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::S2D_Protocol::S2D_Login, ::S2D_Protocol::D2S_Login>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::S2D_Protocol::S2D_Login, ::S2D_Protocol::D2S_Login>* streamer) {
                       return this->StreamedLoginRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LoginRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoginRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_Login* /*request*/, ::S2D_Protocol::D2S_Login* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoginRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::S2D_Protocol::S2D_Login,::S2D_Protocol::D2S_Login>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAccountRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateAccountRequest() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::S2D_Protocol::S2D_CreateAccount, ::S2D_Protocol::D2S_CreateAccount>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::S2D_Protocol::S2D_CreateAccount, ::S2D_Protocol::D2S_CreateAccount>* streamer) {
                       return this->StreamedCreateAccountRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateAccountRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAccountRequest(::grpc::ServerContext* /*context*/, const ::S2D_Protocol::S2D_CreateAccount* /*request*/, ::S2D_Protocol::D2S_CreateAccount* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAccountRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::S2D_Protocol::S2D_CreateAccount,::S2D_Protocol::D2S_CreateAccount>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SayHello<WithStreamedUnaryMethod_LoginRequest<WithStreamedUnaryMethod_CreateAccountRequest<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SayHello<WithStreamedUnaryMethod_LoginRequest<WithStreamedUnaryMethod_CreateAccountRequest<Service > > > StreamedService;
};

}  // namespace S2D_Protocol


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_S2D_5fProtocol_2eproto__INCLUDED
