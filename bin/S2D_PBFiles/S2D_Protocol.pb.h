// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: S2D_Protocol.proto
// Protobuf C++ Version: 5.29.5

#ifndef S2D_5fProtocol_2eproto_2epb_2eh
#define S2D_5fProtocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_S2D_5fProtocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_S2D_5fProtocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_S2D_5fProtocol_2eproto;
namespace S2D_Protocol {
class D2S_CreateAccount;
struct D2S_CreateAccountDefaultTypeInternal;
extern D2S_CreateAccountDefaultTypeInternal _D2S_CreateAccount_default_instance_;
class D2S_Login;
struct D2S_LoginDefaultTypeInternal;
extern D2S_LoginDefaultTypeInternal _D2S_Login_default_instance_;
class D2S_RenewElos;
struct D2S_RenewElosDefaultTypeInternal;
extern D2S_RenewElosDefaultTypeInternal _D2S_RenewElos_default_instance_;
class HelloReply;
struct HelloReplyDefaultTypeInternal;
extern HelloReplyDefaultTypeInternal _HelloReply_default_instance_;
class HelloRequest;
struct HelloRequestDefaultTypeInternal;
extern HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
class S2D_CreateAccount;
struct S2D_CreateAccountDefaultTypeInternal;
extern S2D_CreateAccountDefaultTypeInternal _S2D_CreateAccount_default_instance_;
class S2D_Login;
struct S2D_LoginDefaultTypeInternal;
extern S2D_LoginDefaultTypeInternal _S2D_Login_default_instance_;
class S2D_RenewElos;
struct S2D_RenewElosDefaultTypeInternal;
extern S2D_RenewElosDefaultTypeInternal _S2D_RenewElos_default_instance_;
}  // namespace S2D_Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace S2D_Protocol {

// ===================================================================


// -------------------------------------------------------------------

class S2D_RenewElos final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.S2D_RenewElos) */ {
 public:
  inline S2D_RenewElos() : S2D_RenewElos(nullptr) {}
  ~S2D_RenewElos() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S2D_RenewElos* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S2D_RenewElos));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2D_RenewElos(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2D_RenewElos(const S2D_RenewElos& from) : S2D_RenewElos(nullptr, from) {}
  inline S2D_RenewElos(S2D_RenewElos&& from) noexcept
      : S2D_RenewElos(nullptr, std::move(from)) {}
  inline S2D_RenewElos& operator=(const S2D_RenewElos& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2D_RenewElos& operator=(S2D_RenewElos&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2D_RenewElos& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2D_RenewElos* internal_default_instance() {
    return reinterpret_cast<const S2D_RenewElos*>(
        &_S2D_RenewElos_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(S2D_RenewElos& a, S2D_RenewElos& b) { a.Swap(&b); }
  inline void Swap(S2D_RenewElos* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2D_RenewElos* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2D_RenewElos* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S2D_RenewElos>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2D_RenewElos& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2D_RenewElos& from) { S2D_RenewElos::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S2D_RenewElos* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.S2D_RenewElos"; }

 protected:
  explicit S2D_RenewElos(::google::protobuf::Arena* arena);
  S2D_RenewElos(::google::protobuf::Arena* arena, const S2D_RenewElos& from);
  S2D_RenewElos(::google::protobuf::Arena* arena, S2D_RenewElos&& from) noexcept
      : S2D_RenewElos(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDbidFieldNumber = 1,
  };
  // int32 dbid = 1;
  void clear_dbid() ;
  ::int32_t dbid() const;
  void set_dbid(::int32_t value);

  private:
  ::int32_t _internal_dbid() const;
  void _internal_set_dbid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.S2D_RenewElos)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2D_RenewElos& from_msg);
    ::int32_t dbid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S2D_Login final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.S2D_Login) */ {
 public:
  inline S2D_Login() : S2D_Login(nullptr) {}
  ~S2D_Login() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S2D_Login* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S2D_Login));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2D_Login(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2D_Login(const S2D_Login& from) : S2D_Login(nullptr, from) {}
  inline S2D_Login(S2D_Login&& from) noexcept
      : S2D_Login(nullptr, std::move(from)) {}
  inline S2D_Login& operator=(const S2D_Login& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2D_Login& operator=(S2D_Login&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2D_Login& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2D_Login* internal_default_instance() {
    return reinterpret_cast<const S2D_Login*>(
        &_S2D_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(S2D_Login& a, S2D_Login& b) { a.Swap(&b); }
  inline void Swap(S2D_Login* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2D_Login* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2D_Login* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S2D_Login>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2D_Login& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2D_Login& from) { S2D_Login::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S2D_Login* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.S2D_Login"; }

 protected:
  explicit S2D_Login(::google::protobuf::Arena* arena);
  S2D_Login(::google::protobuf::Arena* arena, const S2D_Login& from);
  S2D_Login(::google::protobuf::Arena* arena, S2D_Login&& from) noexcept
      : S2D_Login(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.S2D_Login)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2D_Login& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S2D_CreateAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.S2D_CreateAccount) */ {
 public:
  inline S2D_CreateAccount() : S2D_CreateAccount(nullptr) {}
  ~S2D_CreateAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S2D_CreateAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S2D_CreateAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S2D_CreateAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline S2D_CreateAccount(const S2D_CreateAccount& from) : S2D_CreateAccount(nullptr, from) {}
  inline S2D_CreateAccount(S2D_CreateAccount&& from) noexcept
      : S2D_CreateAccount(nullptr, std::move(from)) {}
  inline S2D_CreateAccount& operator=(const S2D_CreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline S2D_CreateAccount& operator=(S2D_CreateAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S2D_CreateAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const S2D_CreateAccount* internal_default_instance() {
    return reinterpret_cast<const S2D_CreateAccount*>(
        &_S2D_CreateAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(S2D_CreateAccount& a, S2D_CreateAccount& b) { a.Swap(&b); }
  inline void Swap(S2D_CreateAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S2D_CreateAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S2D_CreateAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S2D_CreateAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S2D_CreateAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S2D_CreateAccount& from) { S2D_CreateAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S2D_CreateAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.S2D_CreateAccount"; }

 protected:
  explicit S2D_CreateAccount(::google::protobuf::Arena* arena);
  S2D_CreateAccount(::google::protobuf::Arena* arena, const S2D_CreateAccount& from);
  S2D_CreateAccount(::google::protobuf::Arena* arena, S2D_CreateAccount&& from) noexcept
      : S2D_CreateAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.S2D_CreateAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S2D_CreateAccount& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class HelloRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.HelloRequest) */ {
 public:
  inline HelloRequest() : HelloRequest(nullptr) {}
  ~HelloRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HelloRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HelloRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HelloRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline HelloRequest(const HelloRequest& from) : HelloRequest(nullptr, from) {}
  inline HelloRequest(HelloRequest&& from) noexcept
      : HelloRequest(nullptr, std::move(from)) {}
  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloRequest& operator=(HelloRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloRequest* internal_default_instance() {
    return reinterpret_cast<const HelloRequest*>(
        &_HelloRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(HelloRequest& a, HelloRequest& b) { a.Swap(&b); }
  inline void Swap(HelloRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HelloRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HelloRequest& from) { HelloRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HelloRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.HelloRequest"; }

 protected:
  explicit HelloRequest(::google::protobuf::Arena* arena);
  HelloRequest(::google::protobuf::Arena* arena, const HelloRequest& from);
  HelloRequest(::google::protobuf::Arena* arena, HelloRequest&& from) noexcept
      : HelloRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.HelloRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HelloRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class HelloReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.HelloReply) */ {
 public:
  inline HelloReply() : HelloReply(nullptr) {}
  ~HelloReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HelloReply* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HelloReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HelloReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline HelloReply(const HelloReply& from) : HelloReply(nullptr, from) {}
  inline HelloReply(HelloReply&& from) noexcept
      : HelloReply(nullptr, std::move(from)) {}
  inline HelloReply& operator=(const HelloReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloReply& operator=(HelloReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const HelloReply* internal_default_instance() {
    return reinterpret_cast<const HelloReply*>(
        &_HelloReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HelloReply& a, HelloReply& b) { a.Swap(&b); }
  inline void Swap(HelloReply* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloReply* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HelloReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HelloReply& from) { HelloReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HelloReply* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.HelloReply"; }

 protected:
  explicit HelloReply(::google::protobuf::Arena* arena);
  HelloReply(::google::protobuf::Arena* arena, const HelloReply& from);
  HelloReply(::google::protobuf::Arena* arena, HelloReply&& from) noexcept
      : HelloReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.HelloReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HelloReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class D2S_RenewElos final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.D2S_RenewElos) */ {
 public:
  inline D2S_RenewElos() : D2S_RenewElos(nullptr) {}
  ~D2S_RenewElos() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(D2S_RenewElos* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(D2S_RenewElos));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR D2S_RenewElos(
      ::google::protobuf::internal::ConstantInitialized);

  inline D2S_RenewElos(const D2S_RenewElos& from) : D2S_RenewElos(nullptr, from) {}
  inline D2S_RenewElos(D2S_RenewElos&& from) noexcept
      : D2S_RenewElos(nullptr, std::move(from)) {}
  inline D2S_RenewElos& operator=(const D2S_RenewElos& from) {
    CopyFrom(from);
    return *this;
  }
  inline D2S_RenewElos& operator=(D2S_RenewElos&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const D2S_RenewElos& default_instance() {
    return *internal_default_instance();
  }
  static inline const D2S_RenewElos* internal_default_instance() {
    return reinterpret_cast<const D2S_RenewElos*>(
        &_D2S_RenewElos_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(D2S_RenewElos& a, D2S_RenewElos& b) { a.Swap(&b); }
  inline void Swap(D2S_RenewElos* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(D2S_RenewElos* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  D2S_RenewElos* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<D2S_RenewElos>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const D2S_RenewElos& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const D2S_RenewElos& from) { D2S_RenewElos::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(D2S_RenewElos* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.D2S_RenewElos"; }

 protected:
  explicit D2S_RenewElos(::google::protobuf::Arena* arena);
  D2S_RenewElos(::google::protobuf::Arena* arena, const D2S_RenewElos& from);
  D2S_RenewElos(::google::protobuf::Arena* arena, D2S_RenewElos&& from) noexcept
      : D2S_RenewElos(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kElo1FieldNumber = 1,
    kElo2FieldNumber = 2,
    kElo3FieldNumber = 3,
  };
  // int32 elo1 = 1;
  void clear_elo1() ;
  ::int32_t elo1() const;
  void set_elo1(::int32_t value);

  private:
  ::int32_t _internal_elo1() const;
  void _internal_set_elo1(::int32_t value);

  public:
  // int32 elo2 = 2;
  void clear_elo2() ;
  ::int32_t elo2() const;
  void set_elo2(::int32_t value);

  private:
  ::int32_t _internal_elo2() const;
  void _internal_set_elo2(::int32_t value);

  public:
  // int32 elo3 = 3;
  void clear_elo3() ;
  ::int32_t elo3() const;
  void set_elo3(::int32_t value);

  private:
  ::int32_t _internal_elo3() const;
  void _internal_set_elo3(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.D2S_RenewElos)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const D2S_RenewElos& from_msg);
    ::int32_t elo1_;
    ::int32_t elo2_;
    ::int32_t elo3_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class D2S_Login final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.D2S_Login) */ {
 public:
  inline D2S_Login() : D2S_Login(nullptr) {}
  ~D2S_Login() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(D2S_Login* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(D2S_Login));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR D2S_Login(
      ::google::protobuf::internal::ConstantInitialized);

  inline D2S_Login(const D2S_Login& from) : D2S_Login(nullptr, from) {}
  inline D2S_Login(D2S_Login&& from) noexcept
      : D2S_Login(nullptr, std::move(from)) {}
  inline D2S_Login& operator=(const D2S_Login& from) {
    CopyFrom(from);
    return *this;
  }
  inline D2S_Login& operator=(D2S_Login&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const D2S_Login& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCaseCase {
    kDbid = 1,
    kIncorrectId = 2,
    VALUE_CASE_NOT_SET = 0,
  };
  static inline const D2S_Login* internal_default_instance() {
    return reinterpret_cast<const D2S_Login*>(
        &_D2S_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(D2S_Login& a, D2S_Login& b) { a.Swap(&b); }
  inline void Swap(D2S_Login* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(D2S_Login* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  D2S_Login* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<D2S_Login>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const D2S_Login& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const D2S_Login& from) { D2S_Login::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(D2S_Login* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.D2S_Login"; }

 protected:
  explicit D2S_Login(::google::protobuf::Arena* arena);
  D2S_Login(::google::protobuf::Arena* arena, const D2S_Login& from);
  D2S_Login(::google::protobuf::Arena* arena, D2S_Login&& from) noexcept
      : D2S_Login(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDbidFieldNumber = 1,
    kIncorrectIdFieldNumber = 2,
  };
  // int32 dbid = 1;
  bool has_dbid() const;
  void clear_dbid() ;
  ::int32_t dbid() const;
  void set_dbid(::int32_t value);

  private:
  ::int32_t _internal_dbid() const;
  void _internal_set_dbid(::int32_t value);

  public:
  // bool incorrect_id = 2;
  bool has_incorrect_id() const;
  void clear_incorrect_id() ;
  bool incorrect_id() const;
  void set_incorrect_id(bool value);

  private:
  bool _internal_incorrect_id() const;
  void _internal_set_incorrect_id(bool value);

  public:
  void clear_value_case();
  ValueCaseCase value_case_case() const;
  // @@protoc_insertion_point(class_scope:S2D_Protocol.D2S_Login)
 private:
  class _Internal;
  void set_has_dbid();
  void set_has_incorrect_id();
  inline bool has_value_case() const;
  inline void clear_has_value_case();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const D2S_Login& from_msg);
    union ValueCaseUnion {
      constexpr ValueCaseUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t dbid_;
      bool incorrect_id_;
    } value_case_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class D2S_CreateAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2D_Protocol.D2S_CreateAccount) */ {
 public:
  inline D2S_CreateAccount() : D2S_CreateAccount(nullptr) {}
  ~D2S_CreateAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(D2S_CreateAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(D2S_CreateAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR D2S_CreateAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline D2S_CreateAccount(const D2S_CreateAccount& from) : D2S_CreateAccount(nullptr, from) {}
  inline D2S_CreateAccount(D2S_CreateAccount&& from) noexcept
      : D2S_CreateAccount(nullptr, std::move(from)) {}
  inline D2S_CreateAccount& operator=(const D2S_CreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline D2S_CreateAccount& operator=(D2S_CreateAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const D2S_CreateAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const D2S_CreateAccount* internal_default_instance() {
    return reinterpret_cast<const D2S_CreateAccount*>(
        &_D2S_CreateAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(D2S_CreateAccount& a, D2S_CreateAccount& b) { a.Swap(&b); }
  inline void Swap(D2S_CreateAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(D2S_CreateAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  D2S_CreateAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<D2S_CreateAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const D2S_CreateAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const D2S_CreateAccount& from) { D2S_CreateAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(D2S_CreateAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2D_Protocol.D2S_CreateAccount"; }

 protected:
  explicit D2S_CreateAccount(::google::protobuf::Arena* arena);
  D2S_CreateAccount(::google::protobuf::Arena* arena, const D2S_CreateAccount& from);
  D2S_CreateAccount(::google::protobuf::Arena* arena, D2S_CreateAccount&& from) noexcept
      : D2S_CreateAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:S2D_Protocol.D2S_CreateAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const D2S_CreateAccount& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2D_5fProtocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// HelloRequest

// string name = 1;
inline void HelloRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& HelloRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.HelloRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HelloRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.HelloRequest.name)
}
inline std::string* HelloRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.HelloRequest.name)
  return _s;
}
inline const std::string& HelloRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void HelloRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* HelloRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* HelloRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.HelloRequest.name)
  return _impl_.name_.Release();
}
inline void HelloRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.HelloRequest.name)
}

// -------------------------------------------------------------------

// HelloReply

// string message = 1;
inline void HelloReply::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& HelloReply::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.HelloReply.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HelloReply::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.HelloReply.message)
}
inline std::string* HelloReply::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.HelloReply.message)
  return _s;
}
inline const std::string& HelloReply::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void HelloReply::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* HelloReply::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* HelloReply::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.HelloReply.message)
  return _impl_.message_.Release();
}
inline void HelloReply::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.HelloReply.message)
}

// -------------------------------------------------------------------

// S2D_Login

// string id = 1;
inline void S2D_Login::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& S2D_Login::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.S2D_Login.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2D_Login::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.S2D_Login.id)
}
inline std::string* S2D_Login::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.S2D_Login.id)
  return _s;
}
inline const std::string& S2D_Login::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void S2D_Login::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* S2D_Login::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* S2D_Login::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.S2D_Login.id)
  return _impl_.id_.Release();
}
inline void S2D_Login::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.S2D_Login.id)
}

// string password = 2;
inline void S2D_Login::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& S2D_Login::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.S2D_Login.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2D_Login::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.S2D_Login.password)
}
inline std::string* S2D_Login::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.S2D_Login.password)
  return _s;
}
inline const std::string& S2D_Login::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void S2D_Login::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* S2D_Login::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* S2D_Login::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.S2D_Login.password)
  return _impl_.password_.Release();
}
inline void S2D_Login::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.S2D_Login.password)
}

// -------------------------------------------------------------------

// D2S_Login

// int32 dbid = 1;
inline bool D2S_Login::has_dbid() const {
  return value_case_case() == kDbid;
}
inline void D2S_Login::set_has_dbid() {
  _impl_._oneof_case_[0] = kDbid;
}
inline void D2S_Login::clear_dbid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() == kDbid) {
    _impl_.value_case_.dbid_ = 0;
    clear_has_value_case();
  }
}
inline ::int32_t D2S_Login::dbid() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_Login.dbid)
  return _internal_dbid();
}
inline void D2S_Login::set_dbid(::int32_t value) {
  if (value_case_case() != kDbid) {
    clear_value_case();
    set_has_dbid();
  }
  _impl_.value_case_.dbid_ = value;
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_Login.dbid)
}
inline ::int32_t D2S_Login::_internal_dbid() const {
  if (value_case_case() == kDbid) {
    return _impl_.value_case_.dbid_;
  }
  return 0;
}

// bool incorrect_id = 2;
inline bool D2S_Login::has_incorrect_id() const {
  return value_case_case() == kIncorrectId;
}
inline void D2S_Login::set_has_incorrect_id() {
  _impl_._oneof_case_[0] = kIncorrectId;
}
inline void D2S_Login::clear_incorrect_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() == kIncorrectId) {
    _impl_.value_case_.incorrect_id_ = false;
    clear_has_value_case();
  }
}
inline bool D2S_Login::incorrect_id() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_Login.incorrect_id)
  return _internal_incorrect_id();
}
inline void D2S_Login::set_incorrect_id(bool value) {
  if (value_case_case() != kIncorrectId) {
    clear_value_case();
    set_has_incorrect_id();
  }
  _impl_.value_case_.incorrect_id_ = value;
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_Login.incorrect_id)
}
inline bool D2S_Login::_internal_incorrect_id() const {
  if (value_case_case() == kIncorrectId) {
    return _impl_.value_case_.incorrect_id_;
  }
  return false;
}

inline bool D2S_Login::has_value_case() const {
  return value_case_case() != VALUE_CASE_NOT_SET;
}
inline void D2S_Login::clear_has_value_case() {
  _impl_._oneof_case_[0] = VALUE_CASE_NOT_SET;
}
inline D2S_Login::ValueCaseCase D2S_Login::value_case_case() const {
  return D2S_Login::ValueCaseCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// S2D_CreateAccount

// string id = 1;
inline void S2D_CreateAccount::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& S2D_CreateAccount::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.S2D_CreateAccount.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2D_CreateAccount::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.S2D_CreateAccount.id)
}
inline std::string* S2D_CreateAccount::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.S2D_CreateAccount.id)
  return _s;
}
inline const std::string& S2D_CreateAccount::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void S2D_CreateAccount::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* S2D_CreateAccount::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* S2D_CreateAccount::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.S2D_CreateAccount.id)
  return _impl_.id_.Release();
}
inline void S2D_CreateAccount::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.S2D_CreateAccount.id)
}

// string password = 2;
inline void S2D_CreateAccount::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& S2D_CreateAccount::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2D_Protocol.S2D_CreateAccount.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S2D_CreateAccount::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2D_Protocol.S2D_CreateAccount.password)
}
inline std::string* S2D_CreateAccount::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:S2D_Protocol.S2D_CreateAccount.password)
  return _s;
}
inline const std::string& S2D_CreateAccount::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void S2D_CreateAccount::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* S2D_CreateAccount::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* S2D_CreateAccount::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2D_Protocol.S2D_CreateAccount.password)
  return _impl_.password_.Release();
}
inline void S2D_CreateAccount::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2D_Protocol.S2D_CreateAccount.password)
}

// -------------------------------------------------------------------

// D2S_CreateAccount

// bool success = 1;
inline void D2S_CreateAccount::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool D2S_CreateAccount::success() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_CreateAccount.success)
  return _internal_success();
}
inline void D2S_CreateAccount::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_CreateAccount.success)
}
inline bool D2S_CreateAccount::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void D2S_CreateAccount::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// S2D_RenewElos

// int32 dbid = 1;
inline void S2D_RenewElos::clear_dbid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dbid_ = 0;
}
inline ::int32_t S2D_RenewElos::dbid() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.S2D_RenewElos.dbid)
  return _internal_dbid();
}
inline void S2D_RenewElos::set_dbid(::int32_t value) {
  _internal_set_dbid(value);
  // @@protoc_insertion_point(field_set:S2D_Protocol.S2D_RenewElos.dbid)
}
inline ::int32_t S2D_RenewElos::_internal_dbid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dbid_;
}
inline void S2D_RenewElos::_internal_set_dbid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dbid_ = value;
}

// -------------------------------------------------------------------

// D2S_RenewElos

// int32 elo1 = 1;
inline void D2S_RenewElos::clear_elo1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo1_ = 0;
}
inline ::int32_t D2S_RenewElos::elo1() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_RenewElos.elo1)
  return _internal_elo1();
}
inline void D2S_RenewElos::set_elo1(::int32_t value) {
  _internal_set_elo1(value);
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_RenewElos.elo1)
}
inline ::int32_t D2S_RenewElos::_internal_elo1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elo1_;
}
inline void D2S_RenewElos::_internal_set_elo1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo1_ = value;
}

// int32 elo2 = 2;
inline void D2S_RenewElos::clear_elo2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo2_ = 0;
}
inline ::int32_t D2S_RenewElos::elo2() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_RenewElos.elo2)
  return _internal_elo2();
}
inline void D2S_RenewElos::set_elo2(::int32_t value) {
  _internal_set_elo2(value);
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_RenewElos.elo2)
}
inline ::int32_t D2S_RenewElos::_internal_elo2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elo2_;
}
inline void D2S_RenewElos::_internal_set_elo2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo2_ = value;
}

// int32 elo3 = 3;
inline void D2S_RenewElos::clear_elo3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo3_ = 0;
}
inline ::int32_t D2S_RenewElos::elo3() const {
  // @@protoc_insertion_point(field_get:S2D_Protocol.D2S_RenewElos.elo3)
  return _internal_elo3();
}
inline void D2S_RenewElos::set_elo3(::int32_t value) {
  _internal_set_elo3(value);
  // @@protoc_insertion_point(field_set:S2D_Protocol.D2S_RenewElos.elo3)
}
inline ::int32_t D2S_RenewElos::_internal_elo3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elo3_;
}
inline void D2S_RenewElos::_internal_set_elo3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elo3_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace S2D_Protocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // S2D_5fProtocol_2eproto_2epb_2eh
