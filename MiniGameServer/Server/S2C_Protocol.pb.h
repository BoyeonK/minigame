// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: S2C_Protocol.proto
// Protobuf C++ Version: 5.29.5

#ifndef S2C_5fProtocol_2eproto_2epb_2eh
#define S2C_5fProtocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_S2C_5fProtocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_S2C_5fProtocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_S2C_5fProtocol_2eproto;
namespace S2C_Protocol {
class C_CreateAccount;
struct C_CreateAccountDefaultTypeInternal;
extern C_CreateAccountDefaultTypeInternal _C_CreateAccount_default_instance_;
class C_Encrypted;
struct C_EncryptedDefaultTypeInternal;
extern C_EncryptedDefaultTypeInternal _C_Encrypted_default_instance_;
class C_GameSceneLoadingProgress;
struct C_GameSceneLoadingProgressDefaultTypeInternal;
extern C_GameSceneLoadingProgressDefaultTypeInternal _C_GameSceneLoadingProgress_default_instance_;
class C_Login;
struct C_LoginDefaultTypeInternal;
extern C_LoginDefaultTypeInternal _C_Login_default_instance_;
class C_Logout;
struct C_LogoutDefaultTypeInternal;
extern C_LogoutDefaultTypeInternal _C_Logout_default_instance_;
class C_MatchmakeCancel;
struct C_MatchmakeCancelDefaultTypeInternal;
extern C_MatchmakeCancelDefaultTypeInternal _C_MatchmakeCancel_default_instance_;
class C_MatchmakeKeepAlive;
struct C_MatchmakeKeepAliveDefaultTypeInternal;
extern C_MatchmakeKeepAliveDefaultTypeInternal _C_MatchmakeKeepAlive_default_instance_;
class C_MatchmakeRequest;
struct C_MatchmakeRequestDefaultTypeInternal;
extern C_MatchmakeRequestDefaultTypeInternal _C_MatchmakeRequest_default_instance_;
class C_Welcome;
struct C_WelcomeDefaultTypeInternal;
extern C_WelcomeDefaultTypeInternal _C_Welcome_default_instance_;
class S_CreateAccount;
struct S_CreateAccountDefaultTypeInternal;
extern S_CreateAccountDefaultTypeInternal _S_CreateAccount_default_instance_;
class S_Encrypted;
struct S_EncryptedDefaultTypeInternal;
extern S_EncryptedDefaultTypeInternal _S_Encrypted_default_instance_;
class S_ExcludedFromMatch;
struct S_ExcludedFromMatchDefaultTypeInternal;
extern S_ExcludedFromMatchDefaultTypeInternal _S_ExcludedFromMatch_default_instance_;
class S_Login;
struct S_LoginDefaultTypeInternal;
extern S_LoginDefaultTypeInternal _S_Login_default_instance_;
class S_Logout;
struct S_LogoutDefaultTypeInternal;
extern S_LogoutDefaultTypeInternal _S_Logout_default_instance_;
class S_MatchmakeCompleted;
struct S_MatchmakeCompletedDefaultTypeInternal;
extern S_MatchmakeCompletedDefaultTypeInternal _S_MatchmakeCompleted_default_instance_;
class S_MatchmakeKeepAlive;
struct S_MatchmakeKeepAliveDefaultTypeInternal;
extern S_MatchmakeKeepAliveDefaultTypeInternal _S_MatchmakeKeepAlive_default_instance_;
class S_RedoMatchmake;
struct S_RedoMatchmakeDefaultTypeInternal;
extern S_RedoMatchmakeDefaultTypeInternal _S_RedoMatchmake_default_instance_;
class S_Welcome;
struct S_WelcomeDefaultTypeInternal;
extern S_WelcomeDefaultTypeInternal _S_Welcome_default_instance_;
class S_WelcomeResponse;
struct S_WelcomeResponseDefaultTypeInternal;
extern S_WelcomeResponseDefaultTypeInternal _S_WelcomeResponse_default_instance_;
}  // namespace S2C_Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace S2C_Protocol {
enum MsgId : int {
  S_WELCOME = 0,
  C_WELCOME = 1,
  S_WELCOME_RESPONSE = 2,
  S_ENCRYPTED = 3,
  C_ENCRYPTED = 4,
  C_LOGIN = 5,
  S_LOGIN = 6,
  C_CREATE_ACCOUNT = 7,
  S_CREATE_ACCOUNT = 8,
  C_LOGOUT = 9,
  S_LOGOUT = 10,
  C_MATCHMAKE_REQUEST = 11,
  C_MATCHMAKE_CANCEL = 12,
  S_MATCHMAKE_KEEPALIVE = 13,
  C_MATCHMAKE_KEEPALIVE = 14,
  S_REDO_MATCHMAKE = 15,
  S_EXCLUDED_FROM_MATCH = 16,
  S_MATCHMAKE_COMPLETED = 17,
  C_GAME_SCENE_LOADING_PROGRESS = 18,
  MsgId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MsgId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MsgId_IsValid(int value);
extern const uint32_t MsgId_internal_data_[];
constexpr MsgId MsgId_MIN = static_cast<MsgId>(0);
constexpr MsgId MsgId_MAX = static_cast<MsgId>(18);
constexpr int MsgId_ARRAYSIZE = 18 + 1;
const ::google::protobuf::EnumDescriptor*
MsgId_descriptor();
template <typename T>
const std::string& MsgId_Name(T value) {
  static_assert(std::is_same<T, MsgId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MsgId_Name().");
  return MsgId_Name(static_cast<MsgId>(value));
}
template <>
inline const std::string& MsgId_Name(MsgId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MsgId_descriptor,
                                                 0, 18>(
      static_cast<int>(value));
}
inline bool MsgId_Parse(absl::string_view name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
      MsgId_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class S_WelcomeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_WelcomeResponse) */ {
 public:
  inline S_WelcomeResponse() : S_WelcomeResponse(nullptr) {}
  ~S_WelcomeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_WelcomeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_WelcomeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_WelcomeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_WelcomeResponse(const S_WelcomeResponse& from) : S_WelcomeResponse(nullptr, from) {}
  inline S_WelcomeResponse(S_WelcomeResponse&& from) noexcept
      : S_WelcomeResponse(nullptr, std::move(from)) {}
  inline S_WelcomeResponse& operator=(const S_WelcomeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_WelcomeResponse& operator=(S_WelcomeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_WelcomeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_WelcomeResponse* internal_default_instance() {
    return reinterpret_cast<const S_WelcomeResponse*>(
        &_S_WelcomeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(S_WelcomeResponse& a, S_WelcomeResponse& b) { a.Swap(&b); }
  inline void Swap(S_WelcomeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_WelcomeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_WelcomeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_WelcomeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_WelcomeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_WelcomeResponse& from) { S_WelcomeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_WelcomeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_WelcomeResponse"; }

 protected:
  explicit S_WelcomeResponse(::google::protobuf::Arena* arena);
  S_WelcomeResponse(::google::protobuf::Arena* arena, const S_WelcomeResponse& from);
  S_WelcomeResponse(::google::protobuf::Arena* arena, S_WelcomeResponse&& from) noexcept
      : S_WelcomeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_WelcomeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_WelcomeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_Welcome final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_Welcome) */ {
 public:
  inline S_Welcome() : S_Welcome(nullptr) {}
  ~S_Welcome() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_Welcome* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_Welcome));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_Welcome(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_Welcome(const S_Welcome& from) : S_Welcome(nullptr, from) {}
  inline S_Welcome(S_Welcome&& from) noexcept
      : S_Welcome(nullptr, std::move(from)) {}
  inline S_Welcome& operator=(const S_Welcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_Welcome& operator=(S_Welcome&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_Welcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_Welcome* internal_default_instance() {
    return reinterpret_cast<const S_Welcome*>(
        &_S_Welcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(S_Welcome& a, S_Welcome& b) { a.Swap(&b); }
  inline void Swap(S_Welcome* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_Welcome* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_Welcome* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_Welcome>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_Welcome& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_Welcome& from) { S_Welcome::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_Welcome* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_Welcome"; }

 protected:
  explicit S_Welcome(::google::protobuf::Arena* arena);
  S_Welcome(::google::protobuf::Arena* arena, const S_Welcome& from);
  S_Welcome(::google::protobuf::Arena* arena, S_Welcome&& from) noexcept
      : S_Welcome(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPublicKeyFieldNumber = 1,
    kGameversionFieldNumber = 2,
  };
  // bytes publicKey = 1;
  void clear_publickey() ;
  const std::string& publickey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_publickey(Arg_&& arg, Args_... args);
  std::string* mutable_publickey();
  PROTOBUF_NODISCARD std::string* release_publickey();
  void set_allocated_publickey(std::string* value);

  private:
  const std::string& _internal_publickey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_publickey(
      const std::string& value);
  std::string* _internal_mutable_publickey();

  public:
  // int32 gameversion = 2;
  void clear_gameversion() ;
  ::int32_t gameversion() const;
  void set_gameversion(::int32_t value);

  private:
  ::int32_t _internal_gameversion() const;
  void _internal_set_gameversion(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_Welcome)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_Welcome& from_msg);
    ::google::protobuf::internal::ArenaStringPtr publickey_;
    ::int32_t gameversion_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_RedoMatchmake final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_RedoMatchmake) */ {
 public:
  inline S_RedoMatchmake() : S_RedoMatchmake(nullptr) {}
  ~S_RedoMatchmake() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_RedoMatchmake* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_RedoMatchmake));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_RedoMatchmake(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_RedoMatchmake(const S_RedoMatchmake& from) : S_RedoMatchmake(nullptr, from) {}
  inline S_RedoMatchmake(S_RedoMatchmake&& from) noexcept
      : S_RedoMatchmake(nullptr, std::move(from)) {}
  inline S_RedoMatchmake& operator=(const S_RedoMatchmake& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_RedoMatchmake& operator=(S_RedoMatchmake&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_RedoMatchmake& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_RedoMatchmake* internal_default_instance() {
    return reinterpret_cast<const S_RedoMatchmake*>(
        &_S_RedoMatchmake_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(S_RedoMatchmake& a, S_RedoMatchmake& b) { a.Swap(&b); }
  inline void Swap(S_RedoMatchmake* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_RedoMatchmake* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_RedoMatchmake* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_RedoMatchmake>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_RedoMatchmake& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_RedoMatchmake& from) { S_RedoMatchmake::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_RedoMatchmake* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_RedoMatchmake"; }

 protected:
  explicit S_RedoMatchmake(::google::protobuf::Arena* arena);
  S_RedoMatchmake(::google::protobuf::Arena* arena, const S_RedoMatchmake& from);
  S_RedoMatchmake(::google::protobuf::Arena* arena, S_RedoMatchmake&& from) noexcept
      : S_RedoMatchmake(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_RedoMatchmake)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_RedoMatchmake& from_msg);
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_MatchmakeKeepAlive final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_MatchmakeKeepAlive) */ {
 public:
  inline S_MatchmakeKeepAlive() : S_MatchmakeKeepAlive(nullptr) {}
  ~S_MatchmakeKeepAlive() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_MatchmakeKeepAlive* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_MatchmakeKeepAlive));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_MatchmakeKeepAlive(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_MatchmakeKeepAlive(const S_MatchmakeKeepAlive& from) : S_MatchmakeKeepAlive(nullptr, from) {}
  inline S_MatchmakeKeepAlive(S_MatchmakeKeepAlive&& from) noexcept
      : S_MatchmakeKeepAlive(nullptr, std::move(from)) {}
  inline S_MatchmakeKeepAlive& operator=(const S_MatchmakeKeepAlive& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_MatchmakeKeepAlive& operator=(S_MatchmakeKeepAlive&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_MatchmakeKeepAlive& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_MatchmakeKeepAlive* internal_default_instance() {
    return reinterpret_cast<const S_MatchmakeKeepAlive*>(
        &_S_MatchmakeKeepAlive_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(S_MatchmakeKeepAlive& a, S_MatchmakeKeepAlive& b) { a.Swap(&b); }
  inline void Swap(S_MatchmakeKeepAlive* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_MatchmakeKeepAlive* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_MatchmakeKeepAlive* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_MatchmakeKeepAlive>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_MatchmakeKeepAlive& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_MatchmakeKeepAlive& from) { S_MatchmakeKeepAlive::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_MatchmakeKeepAlive* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_MatchmakeKeepAlive"; }

 protected:
  explicit S_MatchmakeKeepAlive(::google::protobuf::Arena* arena);
  S_MatchmakeKeepAlive(::google::protobuf::Arena* arena, const S_MatchmakeKeepAlive& from);
  S_MatchmakeKeepAlive(::google::protobuf::Arena* arena, S_MatchmakeKeepAlive&& from) noexcept
      : S_MatchmakeKeepAlive(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSentTimeTickFieldNumber = 2,
    kGameIdFieldNumber = 1,
  };
  // int64 sentTimeTick = 2;
  void clear_senttimetick() ;
  ::int64_t senttimetick() const;
  void set_senttimetick(::int64_t value);

  private:
  ::int64_t _internal_senttimetick() const;
  void _internal_set_senttimetick(::int64_t value);

  public:
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_MatchmakeKeepAlive)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_MatchmakeKeepAlive& from_msg);
    ::int64_t senttimetick_;
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_MatchmakeCompleted final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_MatchmakeCompleted) */ {
 public:
  inline S_MatchmakeCompleted() : S_MatchmakeCompleted(nullptr) {}
  ~S_MatchmakeCompleted() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_MatchmakeCompleted* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_MatchmakeCompleted));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_MatchmakeCompleted(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_MatchmakeCompleted(const S_MatchmakeCompleted& from) : S_MatchmakeCompleted(nullptr, from) {}
  inline S_MatchmakeCompleted(S_MatchmakeCompleted&& from) noexcept
      : S_MatchmakeCompleted(nullptr, std::move(from)) {}
  inline S_MatchmakeCompleted& operator=(const S_MatchmakeCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_MatchmakeCompleted& operator=(S_MatchmakeCompleted&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_MatchmakeCompleted& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_MatchmakeCompleted* internal_default_instance() {
    return reinterpret_cast<const S_MatchmakeCompleted*>(
        &_S_MatchmakeCompleted_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(S_MatchmakeCompleted& a, S_MatchmakeCompleted& b) { a.Swap(&b); }
  inline void Swap(S_MatchmakeCompleted* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_MatchmakeCompleted* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_MatchmakeCompleted* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_MatchmakeCompleted>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_MatchmakeCompleted& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_MatchmakeCompleted& from) { S_MatchmakeCompleted::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_MatchmakeCompleted* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_MatchmakeCompleted"; }

 protected:
  explicit S_MatchmakeCompleted(::google::protobuf::Arena* arena);
  S_MatchmakeCompleted(::google::protobuf::Arena* arena, const S_MatchmakeCompleted& from);
  S_MatchmakeCompleted(::google::protobuf::Arena* arena, S_MatchmakeCompleted&& from) noexcept
      : S_MatchmakeCompleted(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_MatchmakeCompleted)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_MatchmakeCompleted& from_msg);
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_Logout final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_Logout) */ {
 public:
  inline S_Logout() : S_Logout(nullptr) {}
  ~S_Logout() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_Logout* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_Logout));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_Logout(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_Logout(const S_Logout& from) : S_Logout(nullptr, from) {}
  inline S_Logout(S_Logout&& from) noexcept
      : S_Logout(nullptr, std::move(from)) {}
  inline S_Logout& operator=(const S_Logout& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_Logout& operator=(S_Logout&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_Logout& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_Logout* internal_default_instance() {
    return reinterpret_cast<const S_Logout*>(
        &_S_Logout_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(S_Logout& a, S_Logout& b) { a.Swap(&b); }
  inline void Swap(S_Logout* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_Logout* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_Logout* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_Logout>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_Logout& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_Logout& from) { S_Logout::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_Logout* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_Logout"; }

 protected:
  explicit S_Logout(::google::protobuf::Arena* arena);
  S_Logout(::google::protobuf::Arena* arena, const S_Logout& from);
  S_Logout(::google::protobuf::Arena* arena, S_Logout&& from) noexcept
      : S_Logout(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_Logout)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_Logout& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_Login final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_Login) */ {
 public:
  inline S_Login() : S_Login(nullptr) {}
  ~S_Login() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_Login* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_Login));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_Login(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_Login(const S_Login& from) : S_Login(nullptr, from) {}
  inline S_Login(S_Login&& from) noexcept
      : S_Login(nullptr, std::move(from)) {}
  inline S_Login& operator=(const S_Login& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_Login& operator=(S_Login&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_Login& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCaseCase {
    kDbid = 1,
    kErr = 2,
    VALUE_CASE_NOT_SET = 0,
  };
  static inline const S_Login* internal_default_instance() {
    return reinterpret_cast<const S_Login*>(
        &_S_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(S_Login& a, S_Login& b) { a.Swap(&b); }
  inline void Swap(S_Login* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_Login* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_Login* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_Login>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_Login& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_Login& from) { S_Login::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_Login* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_Login"; }

 protected:
  explicit S_Login(::google::protobuf::Arena* arena);
  S_Login(::google::protobuf::Arena* arena, const S_Login& from);
  S_Login(::google::protobuf::Arena* arena, S_Login&& from) noexcept
      : S_Login(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDbidFieldNumber = 1,
    kErrFieldNumber = 2,
  };
  // int32 dbid = 1;
  bool has_dbid() const;
  void clear_dbid() ;
  ::int32_t dbid() const;
  void set_dbid(::int32_t value);

  private:
  ::int32_t _internal_dbid() const;
  void _internal_set_dbid(::int32_t value);

  public:
  // string err = 2;
  bool has_err() const;
  void clear_err() ;
  const std::string& err() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_err(Arg_&& arg, Args_... args);
  std::string* mutable_err();
  PROTOBUF_NODISCARD std::string* release_err();
  void set_allocated_err(std::string* value);

  private:
  const std::string& _internal_err() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_err(
      const std::string& value);
  std::string* _internal_mutable_err();

  public:
  void clear_value_case();
  ValueCaseCase value_case_case() const;
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_Login)
 private:
  class _Internal;
  void set_has_dbid();
  void set_has_err();
  inline bool has_value_case() const;
  inline void clear_has_value_case();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_Login& from_msg);
    union ValueCaseUnion {
      constexpr ValueCaseUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t dbid_;
      ::google::protobuf::internal::ArenaStringPtr err_;
    } value_case_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_ExcludedFromMatch final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_ExcludedFromMatch) */ {
 public:
  inline S_ExcludedFromMatch() : S_ExcludedFromMatch(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_ExcludedFromMatch* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_ExcludedFromMatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_ExcludedFromMatch(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_ExcludedFromMatch(const S_ExcludedFromMatch& from) : S_ExcludedFromMatch(nullptr, from) {}
  inline S_ExcludedFromMatch(S_ExcludedFromMatch&& from) noexcept
      : S_ExcludedFromMatch(nullptr, std::move(from)) {}
  inline S_ExcludedFromMatch& operator=(const S_ExcludedFromMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_ExcludedFromMatch& operator=(S_ExcludedFromMatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_ExcludedFromMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_ExcludedFromMatch* internal_default_instance() {
    return reinterpret_cast<const S_ExcludedFromMatch*>(
        &_S_ExcludedFromMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(S_ExcludedFromMatch& a, S_ExcludedFromMatch& b) { a.Swap(&b); }
  inline void Swap(S_ExcludedFromMatch* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_ExcludedFromMatch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_ExcludedFromMatch* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<S_ExcludedFromMatch>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const S_ExcludedFromMatch& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const S_ExcludedFromMatch& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_ExcludedFromMatch"; }

 protected:
  explicit S_ExcludedFromMatch(::google::protobuf::Arena* arena);
  S_ExcludedFromMatch(::google::protobuf::Arena* arena, const S_ExcludedFromMatch& from);
  S_ExcludedFromMatch(::google::protobuf::Arena* arena, S_ExcludedFromMatch&& from) noexcept
      : S_ExcludedFromMatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_ExcludedFromMatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_ExcludedFromMatch& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_Encrypted final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_Encrypted) */ {
 public:
  inline S_Encrypted() : S_Encrypted(nullptr) {}
  ~S_Encrypted() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_Encrypted* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_Encrypted));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_Encrypted(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_Encrypted(const S_Encrypted& from) : S_Encrypted(nullptr, from) {}
  inline S_Encrypted(S_Encrypted&& from) noexcept
      : S_Encrypted(nullptr, std::move(from)) {}
  inline S_Encrypted& operator=(const S_Encrypted& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_Encrypted& operator=(S_Encrypted&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_Encrypted& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_Encrypted* internal_default_instance() {
    return reinterpret_cast<const S_Encrypted*>(
        &_S_Encrypted_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(S_Encrypted& a, S_Encrypted& b) { a.Swap(&b); }
  inline void Swap(S_Encrypted* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_Encrypted* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_Encrypted* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_Encrypted>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_Encrypted& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_Encrypted& from) { S_Encrypted::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_Encrypted* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_Encrypted"; }

 protected:
  explicit S_Encrypted(::google::protobuf::Arena* arena);
  S_Encrypted(::google::protobuf::Arena* arena, const S_Encrypted& from);
  S_Encrypted(::google::protobuf::Arena* arena, S_Encrypted&& from) noexcept
      : S_Encrypted(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIvFieldNumber = 1,
    kCiphertextFieldNumber = 2,
    kTagFieldNumber = 3,
    kMsgIdFieldNumber = 4,
  };
  // bytes iv = 1;
  void clear_iv() ;
  const std::string& iv() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iv(Arg_&& arg, Args_... args);
  std::string* mutable_iv();
  PROTOBUF_NODISCARD std::string* release_iv();
  void set_allocated_iv(std::string* value);

  private:
  const std::string& _internal_iv() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iv(
      const std::string& value);
  std::string* _internal_mutable_iv();

  public:
  // bytes ciphertext = 2;
  void clear_ciphertext() ;
  const std::string& ciphertext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ciphertext(Arg_&& arg, Args_... args);
  std::string* mutable_ciphertext();
  PROTOBUF_NODISCARD std::string* release_ciphertext();
  void set_allocated_ciphertext(std::string* value);

  private:
  const std::string& _internal_ciphertext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ciphertext(
      const std::string& value);
  std::string* _internal_mutable_ciphertext();

  public:
  // bytes tag = 3;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // int32 msgId = 4;
  void clear_msgid() ;
  ::int32_t msgid() const;
  void set_msgid(::int32_t value);

  private:
  ::int32_t _internal_msgid() const;
  void _internal_set_msgid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_Encrypted)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_Encrypted& from_msg);
    ::google::protobuf::internal::ArenaStringPtr iv_;
    ::google::protobuf::internal::ArenaStringPtr ciphertext_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::int32_t msgid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class S_CreateAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_CreateAccount) */ {
 public:
  inline S_CreateAccount() : S_CreateAccount(nullptr) {}
  ~S_CreateAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_CreateAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_CreateAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_CreateAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_CreateAccount(const S_CreateAccount& from) : S_CreateAccount(nullptr, from) {}
  inline S_CreateAccount(S_CreateAccount&& from) noexcept
      : S_CreateAccount(nullptr, std::move(from)) {}
  inline S_CreateAccount& operator=(const S_CreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_CreateAccount& operator=(S_CreateAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_CreateAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_CreateAccount* internal_default_instance() {
    return reinterpret_cast<const S_CreateAccount*>(
        &_S_CreateAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(S_CreateAccount& a, S_CreateAccount& b) { a.Swap(&b); }
  inline void Swap(S_CreateAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_CreateAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_CreateAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_CreateAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_CreateAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_CreateAccount& from) { S_CreateAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_CreateAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_CreateAccount"; }

 protected:
  explicit S_CreateAccount(::google::protobuf::Arena* arena);
  S_CreateAccount(::google::protobuf::Arena* arena, const S_CreateAccount& from);
  S_CreateAccount(::google::protobuf::Arena* arena, S_CreateAccount&& from) noexcept
      : S_CreateAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string err = 2;
  void clear_err() ;
  const std::string& err() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_err(Arg_&& arg, Args_... args);
  std::string* mutable_err();
  PROTOBUF_NODISCARD std::string* release_err();
  void set_allocated_err(std::string* value);

  private:
  const std::string& _internal_err() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_err(
      const std::string& value);
  std::string* _internal_mutable_err();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_CreateAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_CreateAccount& from_msg);
    ::google::protobuf::internal::ArenaStringPtr err_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_Welcome final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_Welcome) */ {
 public:
  inline C_Welcome() : C_Welcome(nullptr) {}
  ~C_Welcome() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_Welcome* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_Welcome));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_Welcome(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_Welcome(const C_Welcome& from) : C_Welcome(nullptr, from) {}
  inline C_Welcome(C_Welcome&& from) noexcept
      : C_Welcome(nullptr, std::move(from)) {}
  inline C_Welcome& operator=(const C_Welcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_Welcome& operator=(C_Welcome&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_Welcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_Welcome* internal_default_instance() {
    return reinterpret_cast<const C_Welcome*>(
        &_C_Welcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(C_Welcome& a, C_Welcome& b) { a.Swap(&b); }
  inline void Swap(C_Welcome* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_Welcome* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_Welcome* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_Welcome>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_Welcome& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_Welcome& from) { C_Welcome::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_Welcome* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_Welcome"; }

 protected:
  explicit C_Welcome(::google::protobuf::Arena* arena);
  C_Welcome(::google::protobuf::Arena* arena, const C_Welcome& from);
  C_Welcome(::google::protobuf::Arena* arena, C_Welcome&& from) noexcept
      : C_Welcome(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAesKeyFieldNumber = 1,
    kMessageFieldNumber = 2,
  };
  // bytes aesKey = 1;
  void clear_aeskey() ;
  const std::string& aeskey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aeskey(Arg_&& arg, Args_... args);
  std::string* mutable_aeskey();
  PROTOBUF_NODISCARD std::string* release_aeskey();
  void set_allocated_aeskey(std::string* value);

  private:
  const std::string& _internal_aeskey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aeskey(
      const std::string& value);
  std::string* _internal_mutable_aeskey();

  public:
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_Welcome)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_Welcome& from_msg);
    ::google::protobuf::internal::ArenaStringPtr aeskey_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_MatchmakeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_MatchmakeRequest) */ {
 public:
  inline C_MatchmakeRequest() : C_MatchmakeRequest(nullptr) {}
  ~C_MatchmakeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_MatchmakeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_MatchmakeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_MatchmakeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_MatchmakeRequest(const C_MatchmakeRequest& from) : C_MatchmakeRequest(nullptr, from) {}
  inline C_MatchmakeRequest(C_MatchmakeRequest&& from) noexcept
      : C_MatchmakeRequest(nullptr, std::move(from)) {}
  inline C_MatchmakeRequest& operator=(const C_MatchmakeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_MatchmakeRequest& operator=(C_MatchmakeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_MatchmakeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_MatchmakeRequest* internal_default_instance() {
    return reinterpret_cast<const C_MatchmakeRequest*>(
        &_C_MatchmakeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(C_MatchmakeRequest& a, C_MatchmakeRequest& b) { a.Swap(&b); }
  inline void Swap(C_MatchmakeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_MatchmakeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_MatchmakeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_MatchmakeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_MatchmakeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_MatchmakeRequest& from) { C_MatchmakeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_MatchmakeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_MatchmakeRequest"; }

 protected:
  explicit C_MatchmakeRequest(::google::protobuf::Arena* arena);
  C_MatchmakeRequest(::google::protobuf::Arena* arena, const C_MatchmakeRequest& from);
  C_MatchmakeRequest(::google::protobuf::Arena* arena, C_MatchmakeRequest&& from) noexcept
      : C_MatchmakeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_MatchmakeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_MatchmakeRequest& from_msg);
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_MatchmakeKeepAlive final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_MatchmakeKeepAlive) */ {
 public:
  inline C_MatchmakeKeepAlive() : C_MatchmakeKeepAlive(nullptr) {}
  ~C_MatchmakeKeepAlive() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_MatchmakeKeepAlive* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_MatchmakeKeepAlive));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_MatchmakeKeepAlive(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_MatchmakeKeepAlive(const C_MatchmakeKeepAlive& from) : C_MatchmakeKeepAlive(nullptr, from) {}
  inline C_MatchmakeKeepAlive(C_MatchmakeKeepAlive&& from) noexcept
      : C_MatchmakeKeepAlive(nullptr, std::move(from)) {}
  inline C_MatchmakeKeepAlive& operator=(const C_MatchmakeKeepAlive& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_MatchmakeKeepAlive& operator=(C_MatchmakeKeepAlive&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_MatchmakeKeepAlive& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_MatchmakeKeepAlive* internal_default_instance() {
    return reinterpret_cast<const C_MatchmakeKeepAlive*>(
        &_C_MatchmakeKeepAlive_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(C_MatchmakeKeepAlive& a, C_MatchmakeKeepAlive& b) { a.Swap(&b); }
  inline void Swap(C_MatchmakeKeepAlive* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_MatchmakeKeepAlive* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_MatchmakeKeepAlive* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_MatchmakeKeepAlive>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_MatchmakeKeepAlive& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_MatchmakeKeepAlive& from) { C_MatchmakeKeepAlive::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_MatchmakeKeepAlive* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_MatchmakeKeepAlive"; }

 protected:
  explicit C_MatchmakeKeepAlive(::google::protobuf::Arena* arena);
  C_MatchmakeKeepAlive(::google::protobuf::Arena* arena, const C_MatchmakeKeepAlive& from);
  C_MatchmakeKeepAlive(::google::protobuf::Arena* arena, C_MatchmakeKeepAlive&& from) noexcept
      : C_MatchmakeKeepAlive(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSentTimeTickFieldNumber = 2,
    kGameIdFieldNumber = 1,
  };
  // int64 sentTimeTick = 2;
  void clear_senttimetick() ;
  ::int64_t senttimetick() const;
  void set_senttimetick(::int64_t value);

  private:
  ::int64_t _internal_senttimetick() const;
  void _internal_set_senttimetick(::int64_t value);

  public:
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_MatchmakeKeepAlive)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_MatchmakeKeepAlive& from_msg);
    ::int64_t senttimetick_;
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_MatchmakeCancel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_MatchmakeCancel) */ {
 public:
  inline C_MatchmakeCancel() : C_MatchmakeCancel(nullptr) {}
  ~C_MatchmakeCancel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_MatchmakeCancel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_MatchmakeCancel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_MatchmakeCancel(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_MatchmakeCancel(const C_MatchmakeCancel& from) : C_MatchmakeCancel(nullptr, from) {}
  inline C_MatchmakeCancel(C_MatchmakeCancel&& from) noexcept
      : C_MatchmakeCancel(nullptr, std::move(from)) {}
  inline C_MatchmakeCancel& operator=(const C_MatchmakeCancel& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_MatchmakeCancel& operator=(C_MatchmakeCancel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_MatchmakeCancel& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_MatchmakeCancel* internal_default_instance() {
    return reinterpret_cast<const C_MatchmakeCancel*>(
        &_C_MatchmakeCancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(C_MatchmakeCancel& a, C_MatchmakeCancel& b) { a.Swap(&b); }
  inline void Swap(C_MatchmakeCancel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_MatchmakeCancel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_MatchmakeCancel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_MatchmakeCancel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_MatchmakeCancel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_MatchmakeCancel& from) { C_MatchmakeCancel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_MatchmakeCancel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_MatchmakeCancel"; }

 protected:
  explicit C_MatchmakeCancel(::google::protobuf::Arena* arena);
  C_MatchmakeCancel(::google::protobuf::Arena* arena, const C_MatchmakeCancel& from);
  C_MatchmakeCancel(::google::protobuf::Arena* arena, C_MatchmakeCancel&& from) noexcept
      : C_MatchmakeCancel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_MatchmakeCancel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_MatchmakeCancel& from_msg);
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_Logout final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_Logout) */ {
 public:
  inline C_Logout() : C_Logout(nullptr) {}
  ~C_Logout() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_Logout* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_Logout));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_Logout(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_Logout(const C_Logout& from) : C_Logout(nullptr, from) {}
  inline C_Logout(C_Logout&& from) noexcept
      : C_Logout(nullptr, std::move(from)) {}
  inline C_Logout& operator=(const C_Logout& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_Logout& operator=(C_Logout&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_Logout& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_Logout* internal_default_instance() {
    return reinterpret_cast<const C_Logout*>(
        &_C_Logout_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(C_Logout& a, C_Logout& b) { a.Swap(&b); }
  inline void Swap(C_Logout* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_Logout* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_Logout* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_Logout>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_Logout& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_Logout& from) { C_Logout::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_Logout* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_Logout"; }

 protected:
  explicit C_Logout(::google::protobuf::Arena* arena);
  C_Logout(::google::protobuf::Arena* arena, const C_Logout& from);
  C_Logout(::google::protobuf::Arena* arena, C_Logout&& from) noexcept
      : C_Logout(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDbidFieldNumber = 1,
  };
  // int32 dbid = 1;
  void clear_dbid() ;
  ::int32_t dbid() const;
  void set_dbid(::int32_t value);

  private:
  ::int32_t _internal_dbid() const;
  void _internal_set_dbid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_Logout)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_Logout& from_msg);
    ::int32_t dbid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_Login final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_Login) */ {
 public:
  inline C_Login() : C_Login(nullptr) {}
  ~C_Login() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_Login* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_Login));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_Login(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_Login(const C_Login& from) : C_Login(nullptr, from) {}
  inline C_Login(C_Login&& from) noexcept
      : C_Login(nullptr, std::move(from)) {}
  inline C_Login& operator=(const C_Login& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_Login& operator=(C_Login&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_Login& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_Login* internal_default_instance() {
    return reinterpret_cast<const C_Login*>(
        &_C_Login_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(C_Login& a, C_Login& b) { a.Swap(&b); }
  inline void Swap(C_Login* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_Login* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_Login* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_Login>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_Login& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_Login& from) { C_Login::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_Login* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_Login"; }

 protected:
  explicit C_Login(::google::protobuf::Arena* arena);
  C_Login(::google::protobuf::Arena* arena, const C_Login& from);
  C_Login(::google::protobuf::Arena* arena, C_Login&& from) noexcept
      : C_Login(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_Login)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_Login& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_GameSceneLoadingProgress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_GameSceneLoadingProgress) */ {
 public:
  inline C_GameSceneLoadingProgress() : C_GameSceneLoadingProgress(nullptr) {}
  ~C_GameSceneLoadingProgress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_GameSceneLoadingProgress* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_GameSceneLoadingProgress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_GameSceneLoadingProgress(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_GameSceneLoadingProgress(const C_GameSceneLoadingProgress& from) : C_GameSceneLoadingProgress(nullptr, from) {}
  inline C_GameSceneLoadingProgress(C_GameSceneLoadingProgress&& from) noexcept
      : C_GameSceneLoadingProgress(nullptr, std::move(from)) {}
  inline C_GameSceneLoadingProgress& operator=(const C_GameSceneLoadingProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_GameSceneLoadingProgress& operator=(C_GameSceneLoadingProgress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_GameSceneLoadingProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_GameSceneLoadingProgress* internal_default_instance() {
    return reinterpret_cast<const C_GameSceneLoadingProgress*>(
        &_C_GameSceneLoadingProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(C_GameSceneLoadingProgress& a, C_GameSceneLoadingProgress& b) { a.Swap(&b); }
  inline void Swap(C_GameSceneLoadingProgress* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_GameSceneLoadingProgress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_GameSceneLoadingProgress* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_GameSceneLoadingProgress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_GameSceneLoadingProgress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_GameSceneLoadingProgress& from) { C_GameSceneLoadingProgress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_GameSceneLoadingProgress* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_GameSceneLoadingProgress"; }

 protected:
  explicit C_GameSceneLoadingProgress(::google::protobuf::Arena* arena);
  C_GameSceneLoadingProgress(::google::protobuf::Arena* arena, const C_GameSceneLoadingProgress& from);
  C_GameSceneLoadingProgress(::google::protobuf::Arena* arena, C_GameSceneLoadingProgress&& from) noexcept
      : C_GameSceneLoadingProgress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPersentageFieldNumber = 1,
  };
  // int32 persentage = 1;
  void clear_persentage() ;
  ::int32_t persentage() const;
  void set_persentage(::int32_t value);

  private:
  ::int32_t _internal_persentage() const;
  void _internal_set_persentage(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_GameSceneLoadingProgress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_GameSceneLoadingProgress& from_msg);
    ::int32_t persentage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_Encrypted final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_Encrypted) */ {
 public:
  inline C_Encrypted() : C_Encrypted(nullptr) {}
  ~C_Encrypted() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_Encrypted* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_Encrypted));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_Encrypted(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_Encrypted(const C_Encrypted& from) : C_Encrypted(nullptr, from) {}
  inline C_Encrypted(C_Encrypted&& from) noexcept
      : C_Encrypted(nullptr, std::move(from)) {}
  inline C_Encrypted& operator=(const C_Encrypted& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_Encrypted& operator=(C_Encrypted&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_Encrypted& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_Encrypted* internal_default_instance() {
    return reinterpret_cast<const C_Encrypted*>(
        &_C_Encrypted_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(C_Encrypted& a, C_Encrypted& b) { a.Swap(&b); }
  inline void Swap(C_Encrypted* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_Encrypted* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_Encrypted* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_Encrypted>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_Encrypted& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_Encrypted& from) { C_Encrypted::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_Encrypted* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_Encrypted"; }

 protected:
  explicit C_Encrypted(::google::protobuf::Arena* arena);
  C_Encrypted(::google::protobuf::Arena* arena, const C_Encrypted& from);
  C_Encrypted(::google::protobuf::Arena* arena, C_Encrypted&& from) noexcept
      : C_Encrypted(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIvFieldNumber = 1,
    kCiphertextFieldNumber = 2,
    kTagFieldNumber = 3,
    kMsgIdFieldNumber = 4,
  };
  // bytes iv = 1;
  void clear_iv() ;
  const std::string& iv() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iv(Arg_&& arg, Args_... args);
  std::string* mutable_iv();
  PROTOBUF_NODISCARD std::string* release_iv();
  void set_allocated_iv(std::string* value);

  private:
  const std::string& _internal_iv() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iv(
      const std::string& value);
  std::string* _internal_mutable_iv();

  public:
  // bytes ciphertext = 2;
  void clear_ciphertext() ;
  const std::string& ciphertext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ciphertext(Arg_&& arg, Args_... args);
  std::string* mutable_ciphertext();
  PROTOBUF_NODISCARD std::string* release_ciphertext();
  void set_allocated_ciphertext(std::string* value);

  private:
  const std::string& _internal_ciphertext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ciphertext(
      const std::string& value);
  std::string* _internal_mutable_ciphertext();

  public:
  // bytes tag = 3;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // int32 msgId = 4;
  void clear_msgid() ;
  ::int32_t msgid() const;
  void set_msgid(::int32_t value);

  private:
  ::int32_t _internal_msgid() const;
  void _internal_set_msgid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_Encrypted)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_Encrypted& from_msg);
    ::google::protobuf::internal::ArenaStringPtr iv_;
    ::google::protobuf::internal::ArenaStringPtr ciphertext_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::int32_t msgid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};
// -------------------------------------------------------------------

class C_CreateAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_CreateAccount) */ {
 public:
  inline C_CreateAccount() : C_CreateAccount(nullptr) {}
  ~C_CreateAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_CreateAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_CreateAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_CreateAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_CreateAccount(const C_CreateAccount& from) : C_CreateAccount(nullptr, from) {}
  inline C_CreateAccount(C_CreateAccount&& from) noexcept
      : C_CreateAccount(nullptr, std::move(from)) {}
  inline C_CreateAccount& operator=(const C_CreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_CreateAccount& operator=(C_CreateAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_CreateAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_CreateAccount* internal_default_instance() {
    return reinterpret_cast<const C_CreateAccount*>(
        &_C_CreateAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(C_CreateAccount& a, C_CreateAccount& b) { a.Swap(&b); }
  inline void Swap(C_CreateAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_CreateAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_CreateAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_CreateAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_CreateAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_CreateAccount& from) { C_CreateAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_CreateAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_CreateAccount"; }

 protected:
  explicit C_CreateAccount(::google::protobuf::Arena* arena);
  C_CreateAccount(::google::protobuf::Arena* arena, const C_CreateAccount& from);
  C_CreateAccount(::google::protobuf::Arena* arena, C_CreateAccount&& from) noexcept
      : C_CreateAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_CreateAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_CreateAccount& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// S_Welcome

// bytes publicKey = 1;
inline void S_Welcome::clear_publickey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publickey_.ClearToEmpty();
}
inline const std::string& S_Welcome::publickey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Welcome.publicKey)
  return _internal_publickey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_Welcome::set_publickey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publickey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Welcome.publicKey)
}
inline std::string* S_Welcome::mutable_publickey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_publickey();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_Welcome.publicKey)
  return _s;
}
inline const std::string& S_Welcome::_internal_publickey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.publickey_.Get();
}
inline void S_Welcome::_internal_set_publickey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publickey_.Set(value, GetArena());
}
inline std::string* S_Welcome::_internal_mutable_publickey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.publickey_.Mutable( GetArena());
}
inline std::string* S_Welcome::release_publickey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_Welcome.publicKey)
  return _impl_.publickey_.Release();
}
inline void S_Welcome::set_allocated_publickey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publickey_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.publickey_.IsDefault()) {
    _impl_.publickey_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_Welcome.publicKey)
}

// int32 gameversion = 2;
inline void S_Welcome::clear_gameversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameversion_ = 0;
}
inline ::int32_t S_Welcome::gameversion() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Welcome.gameversion)
  return _internal_gameversion();
}
inline void S_Welcome::set_gameversion(::int32_t value) {
  _internal_set_gameversion(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Welcome.gameversion)
}
inline ::int32_t S_Welcome::_internal_gameversion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameversion_;
}
inline void S_Welcome::_internal_set_gameversion(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameversion_ = value;
}

// -------------------------------------------------------------------

// C_Welcome

// bytes aesKey = 1;
inline void C_Welcome::clear_aeskey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aeskey_.ClearToEmpty();
}
inline const std::string& C_Welcome::aeskey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Welcome.aesKey)
  return _internal_aeskey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Welcome::set_aeskey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aeskey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Welcome.aesKey)
}
inline std::string* C_Welcome::mutable_aeskey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aeskey();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Welcome.aesKey)
  return _s;
}
inline const std::string& C_Welcome::_internal_aeskey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aeskey_.Get();
}
inline void C_Welcome::_internal_set_aeskey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aeskey_.Set(value, GetArena());
}
inline std::string* C_Welcome::_internal_mutable_aeskey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aeskey_.Mutable( GetArena());
}
inline std::string* C_Welcome::release_aeskey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Welcome.aesKey)
  return _impl_.aeskey_.Release();
}
inline void C_Welcome::set_allocated_aeskey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aeskey_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aeskey_.IsDefault()) {
    _impl_.aeskey_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Welcome.aesKey)
}

// string message = 2;
inline void C_Welcome::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& C_Welcome::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Welcome.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Welcome::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Welcome.message)
}
inline std::string* C_Welcome::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Welcome.message)
  return _s;
}
inline const std::string& C_Welcome::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void C_Welcome::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* C_Welcome::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* C_Welcome::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Welcome.message)
  return _impl_.message_.Release();
}
inline void C_Welcome::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Welcome.message)
}

// -------------------------------------------------------------------

// S_WelcomeResponse

// string message = 1;
inline void S_WelcomeResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& S_WelcomeResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_WelcomeResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_WelcomeResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_WelcomeResponse.message)
}
inline std::string* S_WelcomeResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_WelcomeResponse.message)
  return _s;
}
inline const std::string& S_WelcomeResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void S_WelcomeResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* S_WelcomeResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* S_WelcomeResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_WelcomeResponse.message)
  return _impl_.message_.Release();
}
inline void S_WelcomeResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_WelcomeResponse.message)
}

// bool success = 2;
inline void S_WelcomeResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_WelcomeResponse::success() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_WelcomeResponse.success)
  return _internal_success();
}
inline void S_WelcomeResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_WelcomeResponse.success)
}
inline bool S_WelcomeResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_WelcomeResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// S_Encrypted

// bytes iv = 1;
inline void S_Encrypted::clear_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.ClearToEmpty();
}
inline const std::string& S_Encrypted::iv() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Encrypted.iv)
  return _internal_iv();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_Encrypted::set_iv(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Encrypted.iv)
}
inline std::string* S_Encrypted::mutable_iv() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_iv();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_Encrypted.iv)
  return _s;
}
inline const std::string& S_Encrypted::_internal_iv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iv_.Get();
}
inline void S_Encrypted::_internal_set_iv(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.Set(value, GetArena());
}
inline std::string* S_Encrypted::_internal_mutable_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.iv_.Mutable( GetArena());
}
inline std::string* S_Encrypted::release_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_Encrypted.iv)
  return _impl_.iv_.Release();
}
inline void S_Encrypted::set_allocated_iv(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.iv_.IsDefault()) {
    _impl_.iv_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_Encrypted.iv)
}

// bytes ciphertext = 2;
inline void S_Encrypted::clear_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.ClearToEmpty();
}
inline const std::string& S_Encrypted::ciphertext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Encrypted.ciphertext)
  return _internal_ciphertext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_Encrypted::set_ciphertext(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Encrypted.ciphertext)
}
inline std::string* S_Encrypted::mutable_ciphertext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_Encrypted.ciphertext)
  return _s;
}
inline const std::string& S_Encrypted::_internal_ciphertext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ciphertext_.Get();
}
inline void S_Encrypted::_internal_set_ciphertext(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.Set(value, GetArena());
}
inline std::string* S_Encrypted::_internal_mutable_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ciphertext_.Mutable( GetArena());
}
inline std::string* S_Encrypted::release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_Encrypted.ciphertext)
  return _impl_.ciphertext_.Release();
}
inline void S_Encrypted::set_allocated_ciphertext(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ciphertext_.IsDefault()) {
    _impl_.ciphertext_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_Encrypted.ciphertext)
}

// bytes tag = 3;
inline void S_Encrypted::clear_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& S_Encrypted::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Encrypted.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_Encrypted::set_tag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Encrypted.tag)
}
inline std::string* S_Encrypted::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_Encrypted.tag)
  return _s;
}
inline const std::string& S_Encrypted::_internal_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_.Get();
}
inline void S_Encrypted::_internal_set_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* S_Encrypted::_internal_mutable_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* S_Encrypted::release_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_Encrypted.tag)
  return _impl_.tag_.Release();
}
inline void S_Encrypted::set_allocated_tag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tag_.IsDefault()) {
    _impl_.tag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_Encrypted.tag)
}

// int32 msgId = 4;
inline void S_Encrypted::clear_msgid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgid_ = 0;
}
inline ::int32_t S_Encrypted::msgid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Encrypted.msgId)
  return _internal_msgid();
}
inline void S_Encrypted::set_msgid(::int32_t value) {
  _internal_set_msgid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Encrypted.msgId)
}
inline ::int32_t S_Encrypted::_internal_msgid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgid_;
}
inline void S_Encrypted::_internal_set_msgid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgid_ = value;
}

// -------------------------------------------------------------------

// C_Encrypted

// bytes iv = 1;
inline void C_Encrypted::clear_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.ClearToEmpty();
}
inline const std::string& C_Encrypted::iv() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Encrypted.iv)
  return _internal_iv();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Encrypted::set_iv(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Encrypted.iv)
}
inline std::string* C_Encrypted::mutable_iv() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_iv();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Encrypted.iv)
  return _s;
}
inline const std::string& C_Encrypted::_internal_iv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iv_.Get();
}
inline void C_Encrypted::_internal_set_iv(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.Set(value, GetArena());
}
inline std::string* C_Encrypted::_internal_mutable_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.iv_.Mutable( GetArena());
}
inline std::string* C_Encrypted::release_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Encrypted.iv)
  return _impl_.iv_.Release();
}
inline void C_Encrypted::set_allocated_iv(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.iv_.IsDefault()) {
    _impl_.iv_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Encrypted.iv)
}

// bytes ciphertext = 2;
inline void C_Encrypted::clear_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.ClearToEmpty();
}
inline const std::string& C_Encrypted::ciphertext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Encrypted.ciphertext)
  return _internal_ciphertext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Encrypted::set_ciphertext(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Encrypted.ciphertext)
}
inline std::string* C_Encrypted::mutable_ciphertext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Encrypted.ciphertext)
  return _s;
}
inline const std::string& C_Encrypted::_internal_ciphertext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ciphertext_.Get();
}
inline void C_Encrypted::_internal_set_ciphertext(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.Set(value, GetArena());
}
inline std::string* C_Encrypted::_internal_mutable_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ciphertext_.Mutable( GetArena());
}
inline std::string* C_Encrypted::release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Encrypted.ciphertext)
  return _impl_.ciphertext_.Release();
}
inline void C_Encrypted::set_allocated_ciphertext(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ciphertext_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ciphertext_.IsDefault()) {
    _impl_.ciphertext_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Encrypted.ciphertext)
}

// bytes tag = 3;
inline void C_Encrypted::clear_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& C_Encrypted::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Encrypted.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Encrypted::set_tag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Encrypted.tag)
}
inline std::string* C_Encrypted::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Encrypted.tag)
  return _s;
}
inline const std::string& C_Encrypted::_internal_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_.Get();
}
inline void C_Encrypted::_internal_set_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* C_Encrypted::_internal_mutable_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* C_Encrypted::release_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Encrypted.tag)
  return _impl_.tag_.Release();
}
inline void C_Encrypted::set_allocated_tag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tag_.IsDefault()) {
    _impl_.tag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Encrypted.tag)
}

// int32 msgId = 4;
inline void C_Encrypted::clear_msgid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgid_ = 0;
}
inline ::int32_t C_Encrypted::msgid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Encrypted.msgId)
  return _internal_msgid();
}
inline void C_Encrypted::set_msgid(::int32_t value) {
  _internal_set_msgid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Encrypted.msgId)
}
inline ::int32_t C_Encrypted::_internal_msgid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgid_;
}
inline void C_Encrypted::_internal_set_msgid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgid_ = value;
}

// -------------------------------------------------------------------

// C_Login

// string id = 1;
inline void C_Login::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& C_Login::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Login.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Login::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Login.id)
}
inline std::string* C_Login::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Login.id)
  return _s;
}
inline const std::string& C_Login::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void C_Login::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* C_Login::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* C_Login::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Login.id)
  return _impl_.id_.Release();
}
inline void C_Login::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Login.id)
}

// string password = 2;
inline void C_Login::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& C_Login::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Login.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_Login::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Login.password)
}
inline std::string* C_Login::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_Login.password)
  return _s;
}
inline const std::string& C_Login::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void C_Login::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* C_Login::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* C_Login::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_Login.password)
  return _impl_.password_.Release();
}
inline void C_Login::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_Login.password)
}

// -------------------------------------------------------------------

// S_Login

// int32 dbid = 1;
inline bool S_Login::has_dbid() const {
  return value_case_case() == kDbid;
}
inline void S_Login::set_has_dbid() {
  _impl_._oneof_case_[0] = kDbid;
}
inline void S_Login::clear_dbid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() == kDbid) {
    _impl_.value_case_.dbid_ = 0;
    clear_has_value_case();
  }
}
inline ::int32_t S_Login::dbid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Login.dbid)
  return _internal_dbid();
}
inline void S_Login::set_dbid(::int32_t value) {
  if (value_case_case() != kDbid) {
    clear_value_case();
    set_has_dbid();
  }
  _impl_.value_case_.dbid_ = value;
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Login.dbid)
}
inline ::int32_t S_Login::_internal_dbid() const {
  if (value_case_case() == kDbid) {
    return _impl_.value_case_.dbid_;
  }
  return 0;
}

// string err = 2;
inline bool S_Login::has_err() const {
  return value_case_case() == kErr;
}
inline void S_Login::set_has_err() {
  _impl_._oneof_case_[0] = kErr;
}
inline void S_Login::clear_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() == kErr) {
    _impl_.value_case_.err_.Destroy();
    clear_has_value_case();
  }
}
inline const std::string& S_Login::err() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Login.err)
  return _internal_err();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_Login::set_err(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() != kErr) {
    clear_value_case();

    set_has_err();
    _impl_.value_case_.err_.InitDefault();
  }
  _impl_.value_case_.err_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Login.err)
}
inline std::string* S_Login::mutable_err() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_err();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_Login.err)
  return _s;
}
inline const std::string& S_Login::_internal_err() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case_case() != kErr) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_case_.err_.Get();
}
inline void S_Login::_internal_set_err(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() != kErr) {
    clear_value_case();

    set_has_err();
    _impl_.value_case_.err_.InitDefault();
  }
  _impl_.value_case_.err_.Set(value, GetArena());
}
inline std::string* S_Login::_internal_mutable_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case_case() != kErr) {
    clear_value_case();

    set_has_err();
    _impl_.value_case_.err_.InitDefault();
  }
  return _impl_.value_case_.err_.Mutable( GetArena());
}
inline std::string* S_Login::release_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_Login.err)
  if (value_case_case() != kErr) {
    return nullptr;
  }
  clear_has_value_case();
  return _impl_.value_case_.err_.Release();
}
inline void S_Login::set_allocated_err(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value_case()) {
    clear_value_case();
  }
  if (value != nullptr) {
    set_has_err();
    _impl_.value_case_.err_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_Login.err)
}

inline bool S_Login::has_value_case() const {
  return value_case_case() != VALUE_CASE_NOT_SET;
}
inline void S_Login::clear_has_value_case() {
  _impl_._oneof_case_[0] = VALUE_CASE_NOT_SET;
}
inline S_Login::ValueCaseCase S_Login::value_case_case() const {
  return S_Login::ValueCaseCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// C_CreateAccount

// string id = 1;
inline void C_CreateAccount::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& C_CreateAccount::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_CreateAccount.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_CreateAccount::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_CreateAccount.id)
}
inline std::string* C_CreateAccount::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_CreateAccount.id)
  return _s;
}
inline const std::string& C_CreateAccount::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void C_CreateAccount::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* C_CreateAccount::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* C_CreateAccount::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_CreateAccount.id)
  return _impl_.id_.Release();
}
inline void C_CreateAccount::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_CreateAccount.id)
}

// string password = 2;
inline void C_CreateAccount::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& C_CreateAccount::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_CreateAccount.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_CreateAccount::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_CreateAccount.password)
}
inline std::string* C_CreateAccount::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.C_CreateAccount.password)
  return _s;
}
inline const std::string& C_CreateAccount::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void C_CreateAccount::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* C_CreateAccount::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* C_CreateAccount::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.C_CreateAccount.password)
  return _impl_.password_.Release();
}
inline void C_CreateAccount::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.C_CreateAccount.password)
}

// -------------------------------------------------------------------

// S_CreateAccount

// bool success = 1;
inline void S_CreateAccount::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_CreateAccount::success() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_CreateAccount.success)
  return _internal_success();
}
inline void S_CreateAccount::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_CreateAccount.success)
}
inline bool S_CreateAccount::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_CreateAccount::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string err = 2;
inline void S_CreateAccount::clear_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_.ClearToEmpty();
}
inline const std::string& S_CreateAccount::err() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_CreateAccount.err)
  return _internal_err();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_CreateAccount::set_err(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_CreateAccount.err)
}
inline std::string* S_CreateAccount::mutable_err() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_err();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_CreateAccount.err)
  return _s;
}
inline const std::string& S_CreateAccount::_internal_err() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.err_.Get();
}
inline void S_CreateAccount::_internal_set_err(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_.Set(value, GetArena());
}
inline std::string* S_CreateAccount::_internal_mutable_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.err_.Mutable( GetArena());
}
inline std::string* S_CreateAccount::release_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_CreateAccount.err)
  return _impl_.err_.Release();
}
inline void S_CreateAccount::set_allocated_err(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.err_.IsDefault()) {
    _impl_.err_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_CreateAccount.err)
}

// -------------------------------------------------------------------

// C_Logout

// int32 dbid = 1;
inline void C_Logout::clear_dbid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dbid_ = 0;
}
inline ::int32_t C_Logout::dbid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_Logout.dbid)
  return _internal_dbid();
}
inline void C_Logout::set_dbid(::int32_t value) {
  _internal_set_dbid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_Logout.dbid)
}
inline ::int32_t C_Logout::_internal_dbid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dbid_;
}
inline void C_Logout::_internal_set_dbid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dbid_ = value;
}

// -------------------------------------------------------------------

// S_Logout

// bool success = 1;
inline void S_Logout::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_Logout::success() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_Logout.success)
  return _internal_success();
}
inline void S_Logout::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_Logout.success)
}
inline bool S_Logout::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_Logout::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// C_MatchmakeRequest

// int32 gameId = 1;
inline void C_MatchmakeRequest::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t C_MatchmakeRequest::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_MatchmakeRequest.gameId)
  return _internal_gameid();
}
inline void C_MatchmakeRequest::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_MatchmakeRequest.gameId)
}
inline ::int32_t C_MatchmakeRequest::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C_MatchmakeRequest::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// C_MatchmakeCancel

// int32 gameId = 1;
inline void C_MatchmakeCancel::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t C_MatchmakeCancel::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_MatchmakeCancel.gameId)
  return _internal_gameid();
}
inline void C_MatchmakeCancel::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_MatchmakeCancel.gameId)
}
inline ::int32_t C_MatchmakeCancel::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C_MatchmakeCancel::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// S_MatchmakeKeepAlive

// int32 gameId = 1;
inline void S_MatchmakeKeepAlive::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t S_MatchmakeKeepAlive::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_MatchmakeKeepAlive.gameId)
  return _internal_gameid();
}
inline void S_MatchmakeKeepAlive::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_MatchmakeKeepAlive.gameId)
}
inline ::int32_t S_MatchmakeKeepAlive::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S_MatchmakeKeepAlive::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// int64 sentTimeTick = 2;
inline void S_MatchmakeKeepAlive::clear_senttimetick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senttimetick_ = ::int64_t{0};
}
inline ::int64_t S_MatchmakeKeepAlive::senttimetick() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_MatchmakeKeepAlive.sentTimeTick)
  return _internal_senttimetick();
}
inline void S_MatchmakeKeepAlive::set_senttimetick(::int64_t value) {
  _internal_set_senttimetick(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_MatchmakeKeepAlive.sentTimeTick)
}
inline ::int64_t S_MatchmakeKeepAlive::_internal_senttimetick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.senttimetick_;
}
inline void S_MatchmakeKeepAlive::_internal_set_senttimetick(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senttimetick_ = value;
}

// -------------------------------------------------------------------

// C_MatchmakeKeepAlive

// int32 gameId = 1;
inline void C_MatchmakeKeepAlive::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t C_MatchmakeKeepAlive::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_MatchmakeKeepAlive.gameId)
  return _internal_gameid();
}
inline void C_MatchmakeKeepAlive::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_MatchmakeKeepAlive.gameId)
}
inline ::int32_t C_MatchmakeKeepAlive::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C_MatchmakeKeepAlive::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// int64 sentTimeTick = 2;
inline void C_MatchmakeKeepAlive::clear_senttimetick() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senttimetick_ = ::int64_t{0};
}
inline ::int64_t C_MatchmakeKeepAlive::senttimetick() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_MatchmakeKeepAlive.sentTimeTick)
  return _internal_senttimetick();
}
inline void C_MatchmakeKeepAlive::set_senttimetick(::int64_t value) {
  _internal_set_senttimetick(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_MatchmakeKeepAlive.sentTimeTick)
}
inline ::int64_t C_MatchmakeKeepAlive::_internal_senttimetick() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.senttimetick_;
}
inline void C_MatchmakeKeepAlive::_internal_set_senttimetick(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senttimetick_ = value;
}

// -------------------------------------------------------------------

// S_RedoMatchmake

// int32 gameId = 1;
inline void S_RedoMatchmake::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t S_RedoMatchmake::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_RedoMatchmake.gameId)
  return _internal_gameid();
}
inline void S_RedoMatchmake::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_RedoMatchmake.gameId)
}
inline ::int32_t S_RedoMatchmake::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S_RedoMatchmake::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// S_ExcludedFromMatch

// -------------------------------------------------------------------

// S_MatchmakeCompleted

// int32 gameId = 1;
inline void S_MatchmakeCompleted::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t S_MatchmakeCompleted::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_MatchmakeCompleted.gameId)
  return _internal_gameid();
}
inline void S_MatchmakeCompleted::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_MatchmakeCompleted.gameId)
}
inline ::int32_t S_MatchmakeCompleted::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S_MatchmakeCompleted::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// C_GameSceneLoadingProgress

// int32 persentage = 1;
inline void C_GameSceneLoadingProgress::clear_persentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persentage_ = 0;
}
inline ::int32_t C_GameSceneLoadingProgress::persentage() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_GameSceneLoadingProgress.persentage)
  return _internal_persentage();
}
inline void C_GameSceneLoadingProgress::set_persentage(::int32_t value) {
  _internal_set_persentage(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_GameSceneLoadingProgress.persentage)
}
inline ::int32_t C_GameSceneLoadingProgress::_internal_persentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persentage_;
}
inline void C_GameSceneLoadingProgress::_internal_set_persentage(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persentage_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace S2C_Protocol


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::S2C_Protocol::MsgId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::S2C_Protocol::MsgId>() {
  return ::S2C_Protocol::MsgId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // S2C_5fProtocol_2eproto_2epb_2eh
