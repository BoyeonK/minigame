// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: S2C_Protocol_Ingame.proto
// Protobuf C++ Version: 5.29.5

#ifndef S2C_5fProtocol_5fIngame_2eproto_2epb_2eh
#define S2C_5fProtocol_5fIngame_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "S2C_Protocol_TestGame.pb.h"
#include "S2C_Protocol_PingPong.pb.h"
#include "S2C_Protocol_Danmaku.pb.h"
#include "S2C_Protocol_Common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_S2C_5fProtocol_5fIngame_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_S2C_5fProtocol_5fIngame_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_S2C_5fProtocol_5fIngame_2eproto;
namespace S2C_Protocol {
class C_RequestGameState;
struct C_RequestGameStateDefaultTypeInternal;
extern C_RequestGameStateDefaultTypeInternal _C_RequestGameState_default_instance_;
class S_DeltaGameObjectHard;
struct S_DeltaGameObjectHardDefaultTypeInternal;
extern S_DeltaGameObjectHardDefaultTypeInternal _S_DeltaGameObjectHard_default_instance_;
class S_DeltaGameObjectSoft;
struct S_DeltaGameObjectSoftDefaultTypeInternal;
extern S_DeltaGameObjectSoftDefaultTypeInternal _S_DeltaGameObjectSoft_default_instance_;
class S_DespawnGameObject;
struct S_DespawnGameObjectDefaultTypeInternal;
extern S_DespawnGameObjectDefaultTypeInternal _S_DespawnGameObject_default_instance_;
class S_EndGame;
struct S_EndGameDefaultTypeInternal;
extern S_EndGameDefaultTypeInternal _S_EndGame_default_instance_;
class S_SpawnGameObject;
struct S_SpawnGameObjectDefaultTypeInternal;
extern S_SpawnGameObjectDefaultTypeInternal _S_SpawnGameObject_default_instance_;
}  // namespace S2C_Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace S2C_Protocol {

// ===================================================================


// -------------------------------------------------------------------

class C_RequestGameState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.C_RequestGameState) */ {
 public:
  inline C_RequestGameState() : C_RequestGameState(nullptr) {}
  ~C_RequestGameState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_RequestGameState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_RequestGameState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_RequestGameState(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_RequestGameState(const C_RequestGameState& from) : C_RequestGameState(nullptr, from) {}
  inline C_RequestGameState(C_RequestGameState&& from) noexcept
      : C_RequestGameState(nullptr, std::move(from)) {}
  inline C_RequestGameState& operator=(const C_RequestGameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_RequestGameState& operator=(C_RequestGameState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_RequestGameState& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_RequestGameState* internal_default_instance() {
    return reinterpret_cast<const C_RequestGameState*>(
        &_C_RequestGameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(C_RequestGameState& a, C_RequestGameState& b) { a.Swap(&b); }
  inline void Swap(C_RequestGameState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_RequestGameState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_RequestGameState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_RequestGameState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_RequestGameState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_RequestGameState& from) { C_RequestGameState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_RequestGameState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.C_RequestGameState"; }

 protected:
  explicit C_RequestGameState(::google::protobuf::Arena* arena);
  C_RequestGameState(::google::protobuf::Arena* arena, const C_RequestGameState& from);
  C_RequestGameState(::google::protobuf::Arena* arena, C_RequestGameState&& from) noexcept
      : C_RequestGameState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.C_RequestGameState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_RequestGameState& from_msg);
    ::int32_t gameid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};
// -------------------------------------------------------------------

class S_EndGame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_EndGame) */ {
 public:
  inline S_EndGame() : S_EndGame(nullptr) {}
  ~S_EndGame() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_EndGame* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_EndGame));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_EndGame(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_EndGame(const S_EndGame& from) : S_EndGame(nullptr, from) {}
  inline S_EndGame(S_EndGame&& from) noexcept
      : S_EndGame(nullptr, std::move(from)) {}
  inline S_EndGame& operator=(const S_EndGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_EndGame& operator=(S_EndGame&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_EndGame& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_EndGame* internal_default_instance() {
    return reinterpret_cast<const S_EndGame*>(
        &_S_EndGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(S_EndGame& a, S_EndGame& b) { a.Swap(&b); }
  inline void Swap(S_EndGame* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_EndGame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_EndGame* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_EndGame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_EndGame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_EndGame& from) { S_EndGame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_EndGame* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_EndGame"; }

 protected:
  explicit S_EndGame(::google::protobuf::Arena* arena);
  S_EndGame(::google::protobuf::Arena* arena, const S_EndGame& from);
  S_EndGame(::google::protobuf::Arena* arena, S_EndGame&& from) noexcept
      : S_EndGame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestGameResultFieldNumber = 2,
    kGameIdFieldNumber = 1,
  };
  // .S2C_Protocol.S_TestGameResult testGameResult = 2;
  bool has_testgameresult() const;
  void clear_testgameresult() ;
  const ::S2C_Protocol::S_TestGameResult& testgameresult() const;
  PROTOBUF_NODISCARD ::S2C_Protocol::S_TestGameResult* release_testgameresult();
  ::S2C_Protocol::S_TestGameResult* mutable_testgameresult();
  void set_allocated_testgameresult(::S2C_Protocol::S_TestGameResult* value);
  void unsafe_arena_set_allocated_testgameresult(::S2C_Protocol::S_TestGameResult* value);
  ::S2C_Protocol::S_TestGameResult* unsafe_arena_release_testgameresult();

  private:
  const ::S2C_Protocol::S_TestGameResult& _internal_testgameresult() const;
  ::S2C_Protocol::S_TestGameResult* _internal_mutable_testgameresult();

  public:
  // int32 gameId = 1;
  void clear_gameid() ;
  ::int32_t gameid() const;
  void set_gameid(::int32_t value);

  private:
  ::int32_t _internal_gameid() const;
  void _internal_set_gameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_EndGame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_EndGame& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::S2C_Protocol::S_TestGameResult* testgameresult_;
    ::int32_t gameid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};
// -------------------------------------------------------------------

class S_SpawnGameObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_SpawnGameObject) */ {
 public:
  inline S_SpawnGameObject() : S_SpawnGameObject(nullptr) {}
  ~S_SpawnGameObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_SpawnGameObject* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_SpawnGameObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_SpawnGameObject(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_SpawnGameObject(const S_SpawnGameObject& from) : S_SpawnGameObject(nullptr, from) {}
  inline S_SpawnGameObject(S_SpawnGameObject&& from) noexcept
      : S_SpawnGameObject(nullptr, std::move(from)) {}
  inline S_SpawnGameObject& operator=(const S_SpawnGameObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_SpawnGameObject& operator=(S_SpawnGameObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_SpawnGameObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_SpawnGameObject* internal_default_instance() {
    return reinterpret_cast<const S_SpawnGameObject*>(
        &_S_SpawnGameObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(S_SpawnGameObject& a, S_SpawnGameObject& b) { a.Swap(&b); }
  inline void Swap(S_SpawnGameObject* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_SpawnGameObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_SpawnGameObject* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_SpawnGameObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_SpawnGameObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_SpawnGameObject& from) { S_SpawnGameObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_SpawnGameObject* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_SpawnGameObject"; }

 protected:
  explicit S_SpawnGameObject(::google::protobuf::Arena* arena);
  S_SpawnGameObject(::google::protobuf::Arena* arena, const S_SpawnGameObject& from);
  S_SpawnGameObject(::google::protobuf::Arena* arena, S_SpawnGameObject&& from) noexcept
      : S_SpawnGameObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObjectFieldNumber = 1,
  };
  // .S2C_Protocol.UnityGameObject object = 1;
  bool has_object() const;
  void clear_object() ;
  const ::S2C_Protocol::UnityGameObject& object() const;
  PROTOBUF_NODISCARD ::S2C_Protocol::UnityGameObject* release_object();
  ::S2C_Protocol::UnityGameObject* mutable_object();
  void set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  void unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  ::S2C_Protocol::UnityGameObject* unsafe_arena_release_object();

  private:
  const ::S2C_Protocol::UnityGameObject& _internal_object() const;
  ::S2C_Protocol::UnityGameObject* _internal_mutable_object();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_SpawnGameObject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_SpawnGameObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::S2C_Protocol::UnityGameObject* object_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};
// -------------------------------------------------------------------

class S_DespawnGameObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_DespawnGameObject) */ {
 public:
  inline S_DespawnGameObject() : S_DespawnGameObject(nullptr) {}
  ~S_DespawnGameObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_DespawnGameObject* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_DespawnGameObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_DespawnGameObject(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_DespawnGameObject(const S_DespawnGameObject& from) : S_DespawnGameObject(nullptr, from) {}
  inline S_DespawnGameObject(S_DespawnGameObject&& from) noexcept
      : S_DespawnGameObject(nullptr, std::move(from)) {}
  inline S_DespawnGameObject& operator=(const S_DespawnGameObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_DespawnGameObject& operator=(S_DespawnGameObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_DespawnGameObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_DespawnGameObject* internal_default_instance() {
    return reinterpret_cast<const S_DespawnGameObject*>(
        &_S_DespawnGameObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(S_DespawnGameObject& a, S_DespawnGameObject& b) { a.Swap(&b); }
  inline void Swap(S_DespawnGameObject* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_DespawnGameObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_DespawnGameObject* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_DespawnGameObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_DespawnGameObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_DespawnGameObject& from) { S_DespawnGameObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_DespawnGameObject* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_DespawnGameObject"; }

 protected:
  explicit S_DespawnGameObject(::google::protobuf::Arena* arena);
  S_DespawnGameObject(::google::protobuf::Arena* arena, const S_DespawnGameObject& from);
  S_DespawnGameObject(::google::protobuf::Arena* arena, S_DespawnGameObject&& from) noexcept
      : S_DespawnGameObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObjectFieldNumber = 1,
  };
  // .S2C_Protocol.UnityGameObject object = 1;
  bool has_object() const;
  void clear_object() ;
  const ::S2C_Protocol::UnityGameObject& object() const;
  PROTOBUF_NODISCARD ::S2C_Protocol::UnityGameObject* release_object();
  ::S2C_Protocol::UnityGameObject* mutable_object();
  void set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  void unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  ::S2C_Protocol::UnityGameObject* unsafe_arena_release_object();

  private:
  const ::S2C_Protocol::UnityGameObject& _internal_object() const;
  ::S2C_Protocol::UnityGameObject* _internal_mutable_object();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_DespawnGameObject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_DespawnGameObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::S2C_Protocol::UnityGameObject* object_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};
// -------------------------------------------------------------------

class S_DeltaGameObjectSoft final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_DeltaGameObjectSoft) */ {
 public:
  inline S_DeltaGameObjectSoft() : S_DeltaGameObjectSoft(nullptr) {}
  ~S_DeltaGameObjectSoft() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_DeltaGameObjectSoft* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_DeltaGameObjectSoft));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_DeltaGameObjectSoft(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_DeltaGameObjectSoft(const S_DeltaGameObjectSoft& from) : S_DeltaGameObjectSoft(nullptr, from) {}
  inline S_DeltaGameObjectSoft(S_DeltaGameObjectSoft&& from) noexcept
      : S_DeltaGameObjectSoft(nullptr, std::move(from)) {}
  inline S_DeltaGameObjectSoft& operator=(const S_DeltaGameObjectSoft& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_DeltaGameObjectSoft& operator=(S_DeltaGameObjectSoft&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_DeltaGameObjectSoft& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_DeltaGameObjectSoft* internal_default_instance() {
    return reinterpret_cast<const S_DeltaGameObjectSoft*>(
        &_S_DeltaGameObjectSoft_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(S_DeltaGameObjectSoft& a, S_DeltaGameObjectSoft& b) { a.Swap(&b); }
  inline void Swap(S_DeltaGameObjectSoft* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_DeltaGameObjectSoft* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_DeltaGameObjectSoft* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_DeltaGameObjectSoft>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_DeltaGameObjectSoft& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_DeltaGameObjectSoft& from) { S_DeltaGameObjectSoft::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_DeltaGameObjectSoft* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_DeltaGameObjectSoft"; }

 protected:
  explicit S_DeltaGameObjectSoft(::google::protobuf::Arena* arena);
  S_DeltaGameObjectSoft(::google::protobuf::Arena* arena, const S_DeltaGameObjectSoft& from);
  S_DeltaGameObjectSoft(::google::protobuf::Arena* arena, S_DeltaGameObjectSoft&& from) noexcept
      : S_DeltaGameObjectSoft(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObjectFieldNumber = 1,
  };
  // .S2C_Protocol.UnityGameObject object = 1;
  bool has_object() const;
  void clear_object() ;
  const ::S2C_Protocol::UnityGameObject& object() const;
  PROTOBUF_NODISCARD ::S2C_Protocol::UnityGameObject* release_object();
  ::S2C_Protocol::UnityGameObject* mutable_object();
  void set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  void unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  ::S2C_Protocol::UnityGameObject* unsafe_arena_release_object();

  private:
  const ::S2C_Protocol::UnityGameObject& _internal_object() const;
  ::S2C_Protocol::UnityGameObject* _internal_mutable_object();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_DeltaGameObjectSoft)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_DeltaGameObjectSoft& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::S2C_Protocol::UnityGameObject* object_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};
// -------------------------------------------------------------------

class S_DeltaGameObjectHard final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:S2C_Protocol.S_DeltaGameObjectHard) */ {
 public:
  inline S_DeltaGameObjectHard() : S_DeltaGameObjectHard(nullptr) {}
  ~S_DeltaGameObjectHard() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_DeltaGameObjectHard* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_DeltaGameObjectHard));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_DeltaGameObjectHard(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_DeltaGameObjectHard(const S_DeltaGameObjectHard& from) : S_DeltaGameObjectHard(nullptr, from) {}
  inline S_DeltaGameObjectHard(S_DeltaGameObjectHard&& from) noexcept
      : S_DeltaGameObjectHard(nullptr, std::move(from)) {}
  inline S_DeltaGameObjectHard& operator=(const S_DeltaGameObjectHard& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_DeltaGameObjectHard& operator=(S_DeltaGameObjectHard&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_DeltaGameObjectHard& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_DeltaGameObjectHard* internal_default_instance() {
    return reinterpret_cast<const S_DeltaGameObjectHard*>(
        &_S_DeltaGameObjectHard_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(S_DeltaGameObjectHard& a, S_DeltaGameObjectHard& b) { a.Swap(&b); }
  inline void Swap(S_DeltaGameObjectHard* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_DeltaGameObjectHard* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_DeltaGameObjectHard* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_DeltaGameObjectHard>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_DeltaGameObjectHard& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_DeltaGameObjectHard& from) { S_DeltaGameObjectHard::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_DeltaGameObjectHard* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "S2C_Protocol.S_DeltaGameObjectHard"; }

 protected:
  explicit S_DeltaGameObjectHard(::google::protobuf::Arena* arena);
  S_DeltaGameObjectHard(::google::protobuf::Arena* arena, const S_DeltaGameObjectHard& from);
  S_DeltaGameObjectHard(::google::protobuf::Arena* arena, S_DeltaGameObjectHard&& from) noexcept
      : S_DeltaGameObjectHard(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObjectFieldNumber = 1,
  };
  // .S2C_Protocol.UnityGameObject object = 1;
  bool has_object() const;
  void clear_object() ;
  const ::S2C_Protocol::UnityGameObject& object() const;
  PROTOBUF_NODISCARD ::S2C_Protocol::UnityGameObject* release_object();
  ::S2C_Protocol::UnityGameObject* mutable_object();
  void set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  void unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value);
  ::S2C_Protocol::UnityGameObject* unsafe_arena_release_object();

  private:
  const ::S2C_Protocol::UnityGameObject& _internal_object() const;
  ::S2C_Protocol::UnityGameObject* _internal_mutable_object();

  public:
  // @@protoc_insertion_point(class_scope:S2C_Protocol.S_DeltaGameObjectHard)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_DeltaGameObjectHard& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::S2C_Protocol::UnityGameObject* object_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_S2C_5fProtocol_5fIngame_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// C_RequestGameState

// int32 gameId = 1;
inline void C_RequestGameState::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t C_RequestGameState::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.C_RequestGameState.gameId)
  return _internal_gameid();
}
inline void C_RequestGameState::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.C_RequestGameState.gameId)
}
inline ::int32_t C_RequestGameState::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void C_RequestGameState::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// -------------------------------------------------------------------

// S_DeltaGameObjectSoft

// .S2C_Protocol.UnityGameObject object = 1;
inline bool S_DeltaGameObjectSoft::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline const ::S2C_Protocol::UnityGameObject& S_DeltaGameObjectSoft::_internal_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::S2C_Protocol::UnityGameObject* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::S2C_Protocol::UnityGameObject&>(::S2C_Protocol::_UnityGameObject_default_instance_);
}
inline const ::S2C_Protocol::UnityGameObject& S_DeltaGameObjectSoft::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_DeltaGameObjectSoft.object)
  return _internal_object();
}
inline void S_DeltaGameObjectSoft::unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:S2C_Protocol.S_DeltaGameObjectSoft.object)
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectSoft::release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* released = _impl_.object_;
  _impl_.object_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectSoft::unsafe_arena_release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_DeltaGameObjectSoft.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectSoft::_internal_mutable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::S2C_Protocol::UnityGameObject>(GetArena());
    _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(p);
  }
  return _impl_.object_;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectSoft::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::S2C_Protocol::UnityGameObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_DeltaGameObjectSoft.object)
  return _msg;
}
inline void S_DeltaGameObjectSoft::set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_DeltaGameObjectSoft.object)
}

// -------------------------------------------------------------------

// S_DeltaGameObjectHard

// .S2C_Protocol.UnityGameObject object = 1;
inline bool S_DeltaGameObjectHard::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline const ::S2C_Protocol::UnityGameObject& S_DeltaGameObjectHard::_internal_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::S2C_Protocol::UnityGameObject* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::S2C_Protocol::UnityGameObject&>(::S2C_Protocol::_UnityGameObject_default_instance_);
}
inline const ::S2C_Protocol::UnityGameObject& S_DeltaGameObjectHard::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_DeltaGameObjectHard.object)
  return _internal_object();
}
inline void S_DeltaGameObjectHard::unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:S2C_Protocol.S_DeltaGameObjectHard.object)
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectHard::release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* released = _impl_.object_;
  _impl_.object_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectHard::unsafe_arena_release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_DeltaGameObjectHard.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectHard::_internal_mutable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::S2C_Protocol::UnityGameObject>(GetArena());
    _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(p);
  }
  return _impl_.object_;
}
inline ::S2C_Protocol::UnityGameObject* S_DeltaGameObjectHard::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::S2C_Protocol::UnityGameObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_DeltaGameObjectHard.object)
  return _msg;
}
inline void S_DeltaGameObjectHard::set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_DeltaGameObjectHard.object)
}

// -------------------------------------------------------------------

// S_SpawnGameObject

// .S2C_Protocol.UnityGameObject object = 1;
inline bool S_SpawnGameObject::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline const ::S2C_Protocol::UnityGameObject& S_SpawnGameObject::_internal_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::S2C_Protocol::UnityGameObject* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::S2C_Protocol::UnityGameObject&>(::S2C_Protocol::_UnityGameObject_default_instance_);
}
inline const ::S2C_Protocol::UnityGameObject& S_SpawnGameObject::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_SpawnGameObject.object)
  return _internal_object();
}
inline void S_SpawnGameObject::unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:S2C_Protocol.S_SpawnGameObject.object)
}
inline ::S2C_Protocol::UnityGameObject* S_SpawnGameObject::release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* released = _impl_.object_;
  _impl_.object_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::S2C_Protocol::UnityGameObject* S_SpawnGameObject::unsafe_arena_release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_SpawnGameObject.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::S2C_Protocol::UnityGameObject* S_SpawnGameObject::_internal_mutable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::S2C_Protocol::UnityGameObject>(GetArena());
    _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(p);
  }
  return _impl_.object_;
}
inline ::S2C_Protocol::UnityGameObject* S_SpawnGameObject::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::S2C_Protocol::UnityGameObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_SpawnGameObject.object)
  return _msg;
}
inline void S_SpawnGameObject::set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_SpawnGameObject.object)
}

// -------------------------------------------------------------------

// S_DespawnGameObject

// .S2C_Protocol.UnityGameObject object = 1;
inline bool S_DespawnGameObject::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline const ::S2C_Protocol::UnityGameObject& S_DespawnGameObject::_internal_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::S2C_Protocol::UnityGameObject* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::S2C_Protocol::UnityGameObject&>(::S2C_Protocol::_UnityGameObject_default_instance_);
}
inline const ::S2C_Protocol::UnityGameObject& S_DespawnGameObject::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_DespawnGameObject.object)
  return _internal_object();
}
inline void S_DespawnGameObject::unsafe_arena_set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:S2C_Protocol.S_DespawnGameObject.object)
}
inline ::S2C_Protocol::UnityGameObject* S_DespawnGameObject::release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* released = _impl_.object_;
  _impl_.object_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::S2C_Protocol::UnityGameObject* S_DespawnGameObject::unsafe_arena_release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_DespawnGameObject.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::UnityGameObject* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::S2C_Protocol::UnityGameObject* S_DespawnGameObject::_internal_mutable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::S2C_Protocol::UnityGameObject>(GetArena());
    _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(p);
  }
  return _impl_.object_;
}
inline ::S2C_Protocol::UnityGameObject* S_DespawnGameObject::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::S2C_Protocol::UnityGameObject* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_DespawnGameObject.object)
  return _msg;
}
inline void S_DespawnGameObject::set_allocated_object(::S2C_Protocol::UnityGameObject* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::S2C_Protocol::UnityGameObject*>(value);
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_DespawnGameObject.object)
}

// -------------------------------------------------------------------

// S_EndGame

// int32 gameId = 1;
inline void S_EndGame::clear_gameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = 0;
}
inline ::int32_t S_EndGame::gameid() const {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_EndGame.gameId)
  return _internal_gameid();
}
inline void S_EndGame::set_gameid(::int32_t value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:S2C_Protocol.S_EndGame.gameId)
}
inline ::int32_t S_EndGame::_internal_gameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameid_;
}
inline void S_EndGame::_internal_set_gameid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameid_ = value;
}

// .S2C_Protocol.S_TestGameResult testGameResult = 2;
inline bool S_EndGame::has_testgameresult() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.testgameresult_ != nullptr);
  return value;
}
inline const ::S2C_Protocol::S_TestGameResult& S_EndGame::_internal_testgameresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::S2C_Protocol::S_TestGameResult* p = _impl_.testgameresult_;
  return p != nullptr ? *p : reinterpret_cast<const ::S2C_Protocol::S_TestGameResult&>(::S2C_Protocol::_S_TestGameResult_default_instance_);
}
inline const ::S2C_Protocol::S_TestGameResult& S_EndGame::testgameresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:S2C_Protocol.S_EndGame.testGameResult)
  return _internal_testgameresult();
}
inline void S_EndGame::unsafe_arena_set_allocated_testgameresult(::S2C_Protocol::S_TestGameResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.testgameresult_);
  }
  _impl_.testgameresult_ = reinterpret_cast<::S2C_Protocol::S_TestGameResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:S2C_Protocol.S_EndGame.testGameResult)
}
inline ::S2C_Protocol::S_TestGameResult* S_EndGame::release_testgameresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::S_TestGameResult* released = _impl_.testgameresult_;
  _impl_.testgameresult_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::S2C_Protocol::S_TestGameResult* S_EndGame::unsafe_arena_release_testgameresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:S2C_Protocol.S_EndGame.testGameResult)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::S2C_Protocol::S_TestGameResult* temp = _impl_.testgameresult_;
  _impl_.testgameresult_ = nullptr;
  return temp;
}
inline ::S2C_Protocol::S_TestGameResult* S_EndGame::_internal_mutable_testgameresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.testgameresult_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::S2C_Protocol::S_TestGameResult>(GetArena());
    _impl_.testgameresult_ = reinterpret_cast<::S2C_Protocol::S_TestGameResult*>(p);
  }
  return _impl_.testgameresult_;
}
inline ::S2C_Protocol::S_TestGameResult* S_EndGame::mutable_testgameresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::S2C_Protocol::S_TestGameResult* _msg = _internal_mutable_testgameresult();
  // @@protoc_insertion_point(field_mutable:S2C_Protocol.S_EndGame.testGameResult)
  return _msg;
}
inline void S_EndGame::set_allocated_testgameresult(::S2C_Protocol::S_TestGameResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.testgameresult_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.testgameresult_ = reinterpret_cast<::S2C_Protocol::S_TestGameResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:S2C_Protocol.S_EndGame.testGameResult)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace S2C_Protocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // S2C_5fProtocol_5fIngame_2eproto_2epb_2eh
